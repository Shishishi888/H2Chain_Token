// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: profit_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// Profit contract.
//
// The Profit contract is an abstract layer for creating scheme to share bonus. 
// Developers can build a system to distribute bonus by call this contract.
// 
// Implement AElf Standards ACS1.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Profit {

  #region Events
  #endregion
  public static partial class ProfitContractImplContainer
  {
    static readonly string __ServiceName = "ProfitImpl.ProfitContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS1.MethodFees> __Marshaller_acs1_MethodFees = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS1.MethodFees.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.CreateSchemeInput> __Marshaller_Profit_CreateSchemeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.CreateSchemeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.AddBeneficiaryInput> __Marshaller_Profit_AddBeneficiaryInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.AddBeneficiaryInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.RemoveBeneficiaryInput> __Marshaller_Profit_RemoveBeneficiaryInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.RemoveBeneficiaryInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.AddBeneficiariesInput> __Marshaller_Profit_AddBeneficiariesInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.AddBeneficiariesInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.RemoveBeneficiariesInput> __Marshaller_Profit_RemoveBeneficiariesInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.RemoveBeneficiariesInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.ContributeProfitsInput> __Marshaller_Profit_ContributeProfitsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.ContributeProfitsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.ClaimProfitsInput> __Marshaller_Profit_ClaimProfitsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.ClaimProfitsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.DistributeProfitsInput> __Marshaller_Profit_DistributeProfitsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.DistributeProfitsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.AddSubSchemeInput> __Marshaller_Profit_AddSubSchemeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.AddSubSchemeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.RemoveSubSchemeInput> __Marshaller_Profit_RemoveSubSchemeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.RemoveSubSchemeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.ResetManagerInput> __Marshaller_Profit_ResetManagerInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.ResetManagerInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.GetManagingSchemeIdsInput> __Marshaller_Profit_GetManagingSchemeIdsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.GetManagingSchemeIdsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.CreatedSchemeIds> __Marshaller_Profit_CreatedSchemeIds = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.CreatedSchemeIds.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.Scheme> __Marshaller_Profit_Scheme = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.Scheme.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.SchemePeriod> __Marshaller_Profit_SchemePeriod = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.SchemePeriod.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.DistributedProfitsInfo> __Marshaller_Profit_DistributedProfitsInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.DistributedProfitsInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.GetProfitDetailsInput> __Marshaller_Profit_GetProfitDetailsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.GetProfitDetailsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.ProfitDetails> __Marshaller_Profit_ProfitDetails = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.ProfitDetails.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.GetProfitAmountInput> __Marshaller_Profit_GetProfitAmountInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.GetProfitAmountInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Profit.ReceivedProfitsMap> __Marshaller_Profit_ReceivedProfitsMap = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Profit.ReceivedProfitsMap.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMethodFee = new aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMethodFee",
        __Marshaller_acs1_MethodFees,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMethodFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMethodFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees> __Method_GetMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_acs1_MethodFees);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMethodFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::AElf.Contracts.Profit.CreateSchemeInput, global::AElf.Types.Hash> __Method_CreateScheme = new aelf::Method<global::AElf.Contracts.Profit.CreateSchemeInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateScheme",
        __Marshaller_Profit_CreateSchemeInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Contracts.Profit.AddBeneficiaryInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddBeneficiary = new aelf::Method<global::AElf.Contracts.Profit.AddBeneficiaryInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddBeneficiary",
        __Marshaller_Profit_AddBeneficiaryInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.RemoveBeneficiaryInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveBeneficiary = new aelf::Method<global::AElf.Contracts.Profit.RemoveBeneficiaryInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveBeneficiary",
        __Marshaller_Profit_RemoveBeneficiaryInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.AddBeneficiariesInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddBeneficiaries = new aelf::Method<global::AElf.Contracts.Profit.AddBeneficiariesInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddBeneficiaries",
        __Marshaller_Profit_AddBeneficiariesInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.RemoveBeneficiariesInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveBeneficiaries = new aelf::Method<global::AElf.Contracts.Profit.RemoveBeneficiariesInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveBeneficiaries",
        __Marshaller_Profit_RemoveBeneficiariesInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.ContributeProfitsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ContributeProfits = new aelf::Method<global::AElf.Contracts.Profit.ContributeProfitsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ContributeProfits",
        __Marshaller_Profit_ContributeProfitsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.ClaimProfitsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClaimProfits = new aelf::Method<global::AElf.Contracts.Profit.ClaimProfitsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ClaimProfits",
        __Marshaller_Profit_ClaimProfitsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.DistributeProfitsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DistributeProfits = new aelf::Method<global::AElf.Contracts.Profit.DistributeProfitsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "DistributeProfits",
        __Marshaller_Profit_DistributeProfitsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.AddSubSchemeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddSubScheme = new aelf::Method<global::AElf.Contracts.Profit.AddSubSchemeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddSubScheme",
        __Marshaller_Profit_AddSubSchemeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.RemoveSubSchemeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveSubScheme = new aelf::Method<global::AElf.Contracts.Profit.RemoveSubSchemeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveSubScheme",
        __Marshaller_Profit_RemoveSubSchemeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.ResetManagerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ResetManager = new aelf::Method<global::AElf.Contracts.Profit.ResetManagerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ResetManager",
        __Marshaller_Profit_ResetManagerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Profit.GetManagingSchemeIdsInput, global::AElf.Contracts.Profit.CreatedSchemeIds> __Method_GetManagingSchemeIds = new aelf::Method<global::AElf.Contracts.Profit.GetManagingSchemeIdsInput, global::AElf.Contracts.Profit.CreatedSchemeIds>(
        aelf::MethodType.View,
        __ServiceName,
        "GetManagingSchemeIds",
        __Marshaller_Profit_GetManagingSchemeIdsInput,
        __Marshaller_Profit_CreatedSchemeIds);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Profit.Scheme> __Method_GetScheme = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Profit.Scheme>(
        aelf::MethodType.View,
        __ServiceName,
        "GetScheme",
        __Marshaller_aelf_Hash,
        __Marshaller_Profit_Scheme);

    static readonly aelf::Method<global::AElf.Contracts.Profit.SchemePeriod, global::AElf.Types.Address> __Method_GetSchemeAddress = new aelf::Method<global::AElf.Contracts.Profit.SchemePeriod, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSchemeAddress",
        __Marshaller_Profit_SchemePeriod,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Contracts.Profit.SchemePeriod, global::AElf.Contracts.Profit.DistributedProfitsInfo> __Method_GetDistributedProfitsInfo = new aelf::Method<global::AElf.Contracts.Profit.SchemePeriod, global::AElf.Contracts.Profit.DistributedProfitsInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDistributedProfitsInfo",
        __Marshaller_Profit_SchemePeriod,
        __Marshaller_Profit_DistributedProfitsInfo);

    static readonly aelf::Method<global::AElf.Contracts.Profit.GetProfitDetailsInput, global::AElf.Contracts.Profit.ProfitDetails> __Method_GetProfitDetails = new aelf::Method<global::AElf.Contracts.Profit.GetProfitDetailsInput, global::AElf.Contracts.Profit.ProfitDetails>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProfitDetails",
        __Marshaller_Profit_GetProfitDetailsInput,
        __Marshaller_Profit_ProfitDetails);

    static readonly aelf::Method<global::AElf.Contracts.Profit.GetProfitAmountInput, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetProfitAmount = new aelf::Method<global::AElf.Contracts.Profit.GetProfitAmountInput, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProfitAmount",
        __Marshaller_Profit_GetProfitAmountInput,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::AElf.Contracts.Profit.ClaimProfitsInput, global::AElf.Contracts.Profit.ReceivedProfitsMap> __Method_GetProfitsMap = new aelf::Method<global::AElf.Contracts.Profit.ClaimProfitsInput, global::AElf.Contracts.Profit.ReceivedProfitsMap>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProfitsMap",
        __Marshaller_Profit_ClaimProfitsInput,
        __Marshaller_Profit_ReceivedProfitsMap);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.Profit.ProfitContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS1.Acs1Reflection.Descriptor.Services[0],
          global::AElf.Contracts.Profit.ProfitContractReflection.Descriptor.Services[0],
          global::AElf.Contracts.Profit.ProfitContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of ProfitContractImpl</summary>
    public abstract partial class ProfitContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.Profit.ProfitContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMethodFee(global::AElf.Standards.ACS1.MethodFees input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMethodFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS1.MethodFees GetMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetMethodFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Hash CreateScheme(global::AElf.Contracts.Profit.CreateSchemeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddBeneficiary(global::AElf.Contracts.Profit.AddBeneficiaryInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveBeneficiary(global::AElf.Contracts.Profit.RemoveBeneficiaryInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddBeneficiaries(global::AElf.Contracts.Profit.AddBeneficiariesInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveBeneficiaries(global::AElf.Contracts.Profit.RemoveBeneficiariesInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ContributeProfits(global::AElf.Contracts.Profit.ContributeProfitsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ClaimProfits(global::AElf.Contracts.Profit.ClaimProfitsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty DistributeProfits(global::AElf.Contracts.Profit.DistributeProfitsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddSubScheme(global::AElf.Contracts.Profit.AddSubSchemeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveSubScheme(global::AElf.Contracts.Profit.RemoveSubSchemeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResetManager(global::AElf.Contracts.Profit.ResetManagerInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Profit.CreatedSchemeIds GetManagingSchemeIds(global::AElf.Contracts.Profit.GetManagingSchemeIdsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Profit.Scheme GetScheme(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetSchemeAddress(global::AElf.Contracts.Profit.SchemePeriod input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Profit.DistributedProfitsInfo GetDistributedProfitsInfo(global::AElf.Contracts.Profit.SchemePeriod input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Profit.ProfitDetails GetProfitDetails(global::AElf.Contracts.Profit.GetProfitDetailsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetProfitAmount(global::AElf.Contracts.Profit.GetProfitAmountInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Profit.ReceivedProfitsMap GetProfitsMap(global::AElf.Contracts.Profit.ClaimProfitsInput input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(ProfitContractImplBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_SetMethodFee, serviceImpl.SetMethodFee)
          .AddMethod(__Method_ChangeMethodFeeController, serviceImpl.ChangeMethodFeeController)
          .AddMethod(__Method_GetMethodFee, serviceImpl.GetMethodFee)
          .AddMethod(__Method_GetMethodFeeController, serviceImpl.GetMethodFeeController)
          .AddMethod(__Method_CreateScheme, serviceImpl.CreateScheme)
          .AddMethod(__Method_AddBeneficiary, serviceImpl.AddBeneficiary)
          .AddMethod(__Method_RemoveBeneficiary, serviceImpl.RemoveBeneficiary)
          .AddMethod(__Method_AddBeneficiaries, serviceImpl.AddBeneficiaries)
          .AddMethod(__Method_RemoveBeneficiaries, serviceImpl.RemoveBeneficiaries)
          .AddMethod(__Method_ContributeProfits, serviceImpl.ContributeProfits)
          .AddMethod(__Method_ClaimProfits, serviceImpl.ClaimProfits)
          .AddMethod(__Method_DistributeProfits, serviceImpl.DistributeProfits)
          .AddMethod(__Method_AddSubScheme, serviceImpl.AddSubScheme)
          .AddMethod(__Method_RemoveSubScheme, serviceImpl.RemoveSubScheme)
          .AddMethod(__Method_ResetManager, serviceImpl.ResetManager)
          .AddMethod(__Method_GetManagingSchemeIds, serviceImpl.GetManagingSchemeIds)
          .AddMethod(__Method_GetScheme, serviceImpl.GetScheme)
          .AddMethod(__Method_GetSchemeAddress, serviceImpl.GetSchemeAddress)
          .AddMethod(__Method_GetDistributedProfitsInfo, serviceImpl.GetDistributedProfitsInfo)
          .AddMethod(__Method_GetProfitDetails, serviceImpl.GetProfitDetails)
          .AddMethod(__Method_GetProfitAmount, serviceImpl.GetProfitAmount)
          .AddMethod(__Method_GetProfitsMap, serviceImpl.GetProfitsMap).Build();
    }

  }
}
#endregion

