// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: association_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// Association contract.
//
// Organizations established to achieve specific goals 
// can use this contract to cooperatively handle transactions within the organization
// 
// Implement AElf Standards ACS1 and ACS3.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Association {

  #region Events
  #endregion
  public static partial class AssociationContractImplContainer
  {
    static readonly string __ServiceName = "AssociationImpl.AssociationContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS3.CreateProposalInput> __Marshaller_acs3_CreateProposalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS3.CreateProposalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS3.ProposalReleaseThreshold> __Marshaller_acs3_ProposalReleaseThreshold = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS3.ProposalReleaseThreshold.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS3.ProposerWhiteList> __Marshaller_acs3_ProposerWhiteList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS3.ProposerWhiteList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS3.CreateProposalBySystemContractInput> __Marshaller_acs3_CreateProposalBySystemContractInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS3.CreateProposalBySystemContractInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS3.ProposalOutput> __Marshaller_acs3_ProposalOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS3.ProposalOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS3.ValidateProposerInWhiteListInput> __Marshaller_acs3_ValidateProposerInWhiteListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS3.ValidateProposerInWhiteListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS1.MethodFees> __Marshaller_acs1_MethodFees = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS1.MethodFees.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Association.CreateOrganizationInput> __Marshaller_Association_CreateOrganizationInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Association.CreateOrganizationInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Association.CreateOrganizationBySystemContractInput> __Marshaller_Association_CreateOrganizationBySystemContractInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Association.CreateOrganizationBySystemContractInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Association.ChangeMemberInput> __Marshaller_Association_ChangeMemberInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Association.ChangeMemberInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Association.Organization> __Marshaller_Association_Organization = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Association.Organization.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS3.CreateProposalInput, global::AElf.Types.Hash> __Method_CreateProposal = new aelf::Method<global::AElf.Standards.ACS3.CreateProposalInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateProposal",
        __Marshaller_acs3_CreateProposalInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Approve = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Approve",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Reject = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Reject",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Abstain = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Abstain",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Release = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Release",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Standards.ACS3.ProposalReleaseThreshold, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeOrganizationThreshold = new aelf::Method<global::AElf.Standards.ACS3.ProposalReleaseThreshold, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeOrganizationThreshold",
        __Marshaller_acs3_ProposalReleaseThreshold,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Standards.ACS3.ProposerWhiteList, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeOrganizationProposerWhiteList = new aelf::Method<global::AElf.Standards.ACS3.ProposerWhiteList, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeOrganizationProposerWhiteList",
        __Marshaller_acs3_ProposerWhiteList,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Standards.ACS3.CreateProposalBySystemContractInput, global::AElf.Types.Hash> __Method_CreateProposalBySystemContract = new aelf::Method<global::AElf.Standards.ACS3.CreateProposalBySystemContractInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateProposalBySystemContract",
        __Marshaller_acs3_CreateProposalBySystemContractInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClearProposal = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ClearProposal",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Standards.ACS3.ProposalOutput> __Method_GetProposal = new aelf::Method<global::AElf.Types.Hash, global::AElf.Standards.ACS3.ProposalOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProposal",
        __Marshaller_aelf_Hash,
        __Marshaller_acs3_ProposalOutput);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_ValidateOrganizationExist = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "ValidateOrganizationExist",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Standards.ACS3.ValidateProposerInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_ValidateProposerInWhiteList = new aelf::Method<global::AElf.Standards.ACS3.ValidateProposerInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "ValidateProposerInWhiteList",
        __Marshaller_acs3_ValidateProposerInWhiteListInput,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMethodFee = new aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMethodFee",
        __Marshaller_acs1_MethodFees,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMethodFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMethodFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees> __Method_GetMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_acs1_MethodFees);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMethodFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::AElf.Contracts.Association.CreateOrganizationInput, global::AElf.Types.Address> __Method_CreateOrganization = new aelf::Method<global::AElf.Contracts.Association.CreateOrganizationInput, global::AElf.Types.Address>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateOrganization",
        __Marshaller_Association_CreateOrganizationInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Contracts.Association.CreateOrganizationBySystemContractInput, global::AElf.Types.Address> __Method_CreateOrganizationBySystemContract = new aelf::Method<global::AElf.Contracts.Association.CreateOrganizationBySystemContractInput, global::AElf.Types.Address>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateOrganizationBySystemContract",
        __Marshaller_Association_CreateOrganizationBySystemContractInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddMember = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddMember",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveMember = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveMember",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Association.ChangeMemberInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMember = new aelf::Method<global::AElf.Contracts.Association.ChangeMemberInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMember",
        __Marshaller_Association_ChangeMemberInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::AElf.Contracts.Association.Organization> __Method_GetOrganization = new aelf::Method<global::AElf.Types.Address, global::AElf.Contracts.Association.Organization>(
        aelf::MethodType.View,
        __ServiceName,
        "GetOrganization",
        __Marshaller_aelf_Address,
        __Marshaller_Association_Organization);

    static readonly aelf::Method<global::AElf.Contracts.Association.CreateOrganizationInput, global::AElf.Types.Address> __Method_CalculateOrganizationAddress = new aelf::Method<global::AElf.Contracts.Association.CreateOrganizationInput, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "CalculateOrganizationAddress",
        __Marshaller_Association_CreateOrganizationInput,
        __Marshaller_aelf_Address);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.Association.AssociationContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS3.Acs3Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS1.Acs1Reflection.Descriptor.Services[0],
          global::AElf.Contracts.Association.AssociationContractReflection.Descriptor.Services[0],
          global::AElf.Contracts.Association.AssociationContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of AssociationContractImpl</summary>
    public abstract partial class AssociationContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.Association.AssociationState>
    {
      public virtual global::AElf.Types.Hash CreateProposal(global::AElf.Standards.ACS3.CreateProposalInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Approve(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Reject(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Abstain(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Release(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeOrganizationThreshold(global::AElf.Standards.ACS3.ProposalReleaseThreshold input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeOrganizationProposerWhiteList(global::AElf.Standards.ACS3.ProposerWhiteList input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Hash CreateProposalBySystemContract(global::AElf.Standards.ACS3.CreateProposalBySystemContractInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ClearProposal(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS3.ProposalOutput GetProposal(global::AElf.Types.Hash input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue ValidateOrganizationExist(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue ValidateProposerInWhiteList(global::AElf.Standards.ACS3.ValidateProposerInWhiteListInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMethodFee(global::AElf.Standards.ACS1.MethodFees input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMethodFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS1.MethodFees GetMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetMethodFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address CreateOrganization(global::AElf.Contracts.Association.CreateOrganizationInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address CreateOrganizationBySystemContract(global::AElf.Contracts.Association.CreateOrganizationBySystemContractInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddMember(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveMember(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMember(global::AElf.Contracts.Association.ChangeMemberInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Association.Organization GetOrganization(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address CalculateOrganizationAddress(global::AElf.Contracts.Association.CreateOrganizationInput input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(AssociationContractImplBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_CreateProposal, serviceImpl.CreateProposal)
          .AddMethod(__Method_Approve, serviceImpl.Approve)
          .AddMethod(__Method_Reject, serviceImpl.Reject)
          .AddMethod(__Method_Abstain, serviceImpl.Abstain)
          .AddMethod(__Method_Release, serviceImpl.Release)
          .AddMethod(__Method_ChangeOrganizationThreshold, serviceImpl.ChangeOrganizationThreshold)
          .AddMethod(__Method_ChangeOrganizationProposerWhiteList, serviceImpl.ChangeOrganizationProposerWhiteList)
          .AddMethod(__Method_CreateProposalBySystemContract, serviceImpl.CreateProposalBySystemContract)
          .AddMethod(__Method_ClearProposal, serviceImpl.ClearProposal)
          .AddMethod(__Method_GetProposal, serviceImpl.GetProposal)
          .AddMethod(__Method_ValidateOrganizationExist, serviceImpl.ValidateOrganizationExist)
          .AddMethod(__Method_ValidateProposerInWhiteList, serviceImpl.ValidateProposerInWhiteList)
          .AddMethod(__Method_SetMethodFee, serviceImpl.SetMethodFee)
          .AddMethod(__Method_ChangeMethodFeeController, serviceImpl.ChangeMethodFeeController)
          .AddMethod(__Method_GetMethodFee, serviceImpl.GetMethodFee)
          .AddMethod(__Method_GetMethodFeeController, serviceImpl.GetMethodFeeController)
          .AddMethod(__Method_CreateOrganization, serviceImpl.CreateOrganization)
          .AddMethod(__Method_CreateOrganizationBySystemContract, serviceImpl.CreateOrganizationBySystemContract)
          .AddMethod(__Method_AddMember, serviceImpl.AddMember)
          .AddMethod(__Method_RemoveMember, serviceImpl.RemoveMember)
          .AddMethod(__Method_ChangeMember, serviceImpl.ChangeMember)
          .AddMethod(__Method_GetOrganization, serviceImpl.GetOrganization)
          .AddMethod(__Method_CalculateOrganizationAddress, serviceImpl.CalculateOrganizationAddress).Build();
    }

  }
}
#endregion

