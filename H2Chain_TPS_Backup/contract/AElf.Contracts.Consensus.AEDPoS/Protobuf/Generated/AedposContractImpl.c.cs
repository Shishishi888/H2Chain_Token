// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aedpos_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// AEDPoS contract.
//
// Used to managing block producers and synchronizing data.
// 
// Implement AElf Standards ACS1, ACS4, ACS6, ACS10 and ACS11.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Consensus.AEDPoS {

  #region Events
  #endregion
  public static partial class AEDPoSContractImplContainer
  {
    static readonly string __ServiceName = "AEDPoSImpl.AEDPoSContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS1.MethodFees> __Marshaller_acs1_MethodFees = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS1.MethodFees.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BytesValue> __Marshaller_google_protobuf_BytesValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BytesValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS4.ConsensusCommand> __Marshaller_acs4_ConsensusCommand = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS4.ConsensusCommand.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS4.TransactionList> __Marshaller_acs4_TransactionList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS4.TransactionList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS4.ValidationResult> __Marshaller_acs4_ValidationResult = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS4.ValidationResult.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS10.DonateInput> __Marshaller_acs10_DonateInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS10.DonateInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS10.ReleaseInput> __Marshaller_acs10_ReleaseInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS10.ReleaseInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS10.SymbolList> __Marshaller_acs10_SymbolList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS10.SymbolList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS10.Dividends> __Marshaller_acs10_Dividends = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS10.Dividends.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput> __Marshaller_AEDPoS_InitialAElfConsensusContractInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.Round> __Marshaller_AEDPoS_Round = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.Round.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput> __Marshaller_AEDPoS_UpdateValueInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput> __Marshaller_AEDPoS_TinyBlockInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int32Value> __Marshaller_google_protobuf_Int32Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int32Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput> __Marshaller_AEDPoS_RecordCandidateReplacementInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.MinerList> __Marshaller_AEDPoS_MinerList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.MinerList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.PubkeyList> __Marshaller_AEDPoS_PubkeyList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.PubkeyList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber> __Marshaller_AEDPoS_MinerListWithRoundNumber = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput> __Marshaller_AEDPoS_GetMinerListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMethodFee = new aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMethodFee",
        __Marshaller_acs1_MethodFees,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMethodFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMethodFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees> __Method_GetMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_acs1_MethodFees);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMethodFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.ConsensusCommand> __Method_GetConsensusCommand = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.ConsensusCommand>(
        aelf::MethodType.View,
        __ServiceName,
        "GetConsensusCommand",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_acs4_ConsensusCommand);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.BytesValue> __Method_GetConsensusExtraData = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.BytesValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetConsensusExtraData",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_google_protobuf_BytesValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.TransactionList> __Method_GenerateConsensusTransactions = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.TransactionList>(
        aelf::MethodType.View,
        __ServiceName,
        "GenerateConsensusTransactions",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_acs4_TransactionList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.ValidationResult> __Method_ValidateConsensusBeforeExecution = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.ValidationResult>(
        aelf::MethodType.View,
        __ServiceName,
        "ValidateConsensusBeforeExecution",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_acs4_ValidationResult);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.ValidationResult> __Method_ValidateConsensusAfterExecution = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::AElf.Standards.ACS4.ValidationResult>(
        aelf::MethodType.View,
        __ServiceName,
        "ValidateConsensusAfterExecution",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_acs4_ValidationResult);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.BytesValue> __Method_GetRandomBytes = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.BytesValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetRandomBytes",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_google_protobuf_BytesValue);

    static readonly aelf::Method<global::AElf.Standards.ACS10.DonateInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Donate = new aelf::Method<global::AElf.Standards.ACS10.DonateInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Donate",
        __Marshaller_acs10_DonateInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Standards.ACS10.ReleaseInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Release = new aelf::Method<global::AElf.Standards.ACS10.ReleaseInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Release",
        __Marshaller_acs10_ReleaseInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Standards.ACS10.SymbolList, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSymbolList = new aelf::Method<global::AElf.Standards.ACS10.SymbolList, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSymbolList",
        __Marshaller_acs10_SymbolList,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Standards.ACS10.SymbolList> __Method_GetSymbolList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Standards.ACS10.SymbolList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSymbolList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_acs10_SymbolList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Standards.ACS10.Dividends> __Method_GetUndistributedDividends = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Standards.ACS10.Dividends>(
        aelf::MethodType.View,
        __ServiceName,
        "GetUndistributedDividends",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_acs10_Dividends);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Standards.ACS10.Dividends> __Method_GetDividends = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Standards.ACS10.Dividends>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDividends",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_acs10_Dividends);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateInformationFromCrossChain = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateInformationFromCrossChain",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.BytesValue> __Method_GetChainInitializationInformation = new aelf::Method<global::Google.Protobuf.WellKnownTypes.BytesValue, global::Google.Protobuf.WellKnownTypes.BytesValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetChainInitializationInformation",
        __Marshaller_google_protobuf_BytesValue,
        __Marshaller_google_protobuf_BytesValue);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_CheckCrossChainIndexingPermission = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "CheckCrossChainIndexingPermission",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitialAElfConsensusContract = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitialAElfConsensusContract",
        __Marshaller_AEDPoS_InitialAElfConsensusContractInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.Round, global::Google.Protobuf.WellKnownTypes.Empty> __Method_FirstRound = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.Round, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "FirstRound",
        __Marshaller_AEDPoS_Round,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateValue = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateValue",
        __Marshaller_AEDPoS_UpdateValueInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.Round, global::Google.Protobuf.WellKnownTypes.Empty> __Method_NextRound = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.Round, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "NextRound",
        __Marshaller_AEDPoS_Round,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.Round, global::Google.Protobuf.WellKnownTypes.Empty> __Method_NextTerm = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.Round, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "NextTerm",
        __Marshaller_AEDPoS_Round,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateTinyBlockInformation = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateTinyBlockInformation",
        __Marshaller_AEDPoS_TinyBlockInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMaximumMinersCount = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMaximumMinersCount",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMaximumMinersCountController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMaximumMinersCountController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RecordCandidateReplacement = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RecordCandidateReplacement",
        __Marshaller_AEDPoS_RecordCandidateReplacementInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerList> __Method_GetCurrentMinerList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentMinerList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_MinerList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.PubkeyList> __Method_GetCurrentMinerPubkeyList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.PubkeyList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentMinerPubkeyList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_PubkeyList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber> __Method_GetCurrentMinerListWithRoundNumber = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentMinerListWithRoundNumber",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_MinerListWithRoundNumber);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Contracts.Consensus.AEDPoS.Round> __Method_GetRoundInformation = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Contracts.Consensus.AEDPoS.Round>(
        aelf::MethodType.View,
        __ServiceName,
        "GetRoundInformation",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_AEDPoS_Round);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetCurrentRoundNumber = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentRoundNumber",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.Round> __Method_GetCurrentRoundInformation = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.Round>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentRoundInformation",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_Round);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.Round> __Method_GetPreviousRoundInformation = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.Round>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPreviousRoundInformation",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_Round);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetCurrentTermNumber = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentTermNumber",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetCurrentTermMiningReward = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentTermMiningReward",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput, global::AElf.Contracts.Consensus.AEDPoS.MinerList> __Method_GetMinerList = new aelf::Method<global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput, global::AElf.Contracts.Consensus.AEDPoS.MinerList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMinerList",
        __Marshaller_AEDPoS_GetMinerListInput,
        __Marshaller_AEDPoS_MinerList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerList> __Method_GetPreviousMinerList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPreviousMinerList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_MinerList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetMinedBlocksOfPreviousTerm = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMinedBlocksOfPreviousTerm",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetNextMinerPubkey = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetNextMinerPubkey",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsCurrentMiner = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsCurrentMiner",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetNextElectCountDown = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetNextElectCountDown",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Contracts.Consensus.AEDPoS.Round> __Method_GetPreviousTermInformation = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Contracts.Consensus.AEDPoS.Round>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPreviousTermInformation",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_AEDPoS_Round);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Types.Hash> __Method_GetRandomHash = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetRandomHash",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value> __Method_GetMaximumBlocksCount = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMaximumBlocksCount",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int32Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value> __Method_GetMaximumMinersCount = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int32Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMaximumMinersCount",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int32Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMaximumMinersCountController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMaximumMinersCountController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerList> __Method_GetMainChainCurrentMinerList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.MinerList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMainChainCurrentMinerList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_MinerList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.PubkeyList> __Method_GetPreviousTermMinerPubkeyList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.Consensus.AEDPoS.PubkeyList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPreviousTermMinerPubkeyList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AEDPoS_PubkeyList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetCurrentMiningRewardPerBlock = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentMiningRewardPerBlock",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS1.Acs1Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS4.Acs4Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS6.Acs6Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS10.Acs10Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS11.Acs11Reflection.Descriptor.Services[0],
          global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.Services[0],
          global::AElf.Contracts.Consensus.AEDPoS.AedposContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of AEDPoSContractImpl</summary>
    public abstract partial class AEDPoSContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.Consensus.AEDPoS.AEDPoSContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMethodFee(global::AElf.Standards.ACS1.MethodFees input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMethodFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS1.MethodFees GetMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetMethodFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS4.ConsensusCommand GetConsensusCommand(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BytesValue GetConsensusExtraData(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS4.TransactionList GenerateConsensusTransactions(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS4.ValidationResult ValidateConsensusBeforeExecution(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS4.ValidationResult ValidateConsensusAfterExecution(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BytesValue GetRandomBytes(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Donate(global::AElf.Standards.ACS10.DonateInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Release(global::AElf.Standards.ACS10.ReleaseInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSymbolList(global::AElf.Standards.ACS10.SymbolList input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS10.SymbolList GetSymbolList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS10.Dividends GetUndistributedDividends(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS10.Dividends GetDividends(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateInformationFromCrossChain(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BytesValue GetChainInitializationInformation(global::Google.Protobuf.WellKnownTypes.BytesValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue CheckCrossChainIndexingPermission(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty InitialAElfConsensusContract(global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty FirstRound(global::AElf.Contracts.Consensus.AEDPoS.Round input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateValue(global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty NextRound(global::AElf.Contracts.Consensus.AEDPoS.Round input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty NextTerm(global::AElf.Contracts.Consensus.AEDPoS.Round input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateTinyBlockInformation(global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMaximumMinersCount(global::Google.Protobuf.WellKnownTypes.Int32Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMaximumMinersCountController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RecordCandidateReplacement(global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.MinerList GetCurrentMinerList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.PubkeyList GetCurrentMinerPubkeyList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber GetCurrentMinerListWithRoundNumber(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.Round GetRoundInformation(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetCurrentRoundNumber(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.Round GetCurrentRoundInformation(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.Round GetPreviousRoundInformation(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetCurrentTermNumber(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetCurrentTermMiningReward(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.MinerList GetMinerList(global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.MinerList GetPreviousMinerList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetMinedBlocksOfPreviousTerm(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetNextMinerPubkey(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsCurrentMiner(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetNextElectCountDown(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.Round GetPreviousTermInformation(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Hash GetRandomHash(global::Google.Protobuf.WellKnownTypes.Int64Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int32Value GetMaximumBlocksCount(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int32Value GetMaximumMinersCount(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetMaximumMinersCountController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.MinerList GetMainChainCurrentMinerList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.Consensus.AEDPoS.PubkeyList GetPreviousTermMinerPubkeyList(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetCurrentMiningRewardPerBlock(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(AEDPoSContractImplBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_SetMethodFee, serviceImpl.SetMethodFee)
          .AddMethod(__Method_ChangeMethodFeeController, serviceImpl.ChangeMethodFeeController)
          .AddMethod(__Method_GetMethodFee, serviceImpl.GetMethodFee)
          .AddMethod(__Method_GetMethodFeeController, serviceImpl.GetMethodFeeController)
          .AddMethod(__Method_GetConsensusCommand, serviceImpl.GetConsensusCommand)
          .AddMethod(__Method_GetConsensusExtraData, serviceImpl.GetConsensusExtraData)
          .AddMethod(__Method_GenerateConsensusTransactions, serviceImpl.GenerateConsensusTransactions)
          .AddMethod(__Method_ValidateConsensusBeforeExecution, serviceImpl.ValidateConsensusBeforeExecution)
          .AddMethod(__Method_ValidateConsensusAfterExecution, serviceImpl.ValidateConsensusAfterExecution)
          .AddMethod(__Method_GetRandomBytes, serviceImpl.GetRandomBytes)
          .AddMethod(__Method_Donate, serviceImpl.Donate)
          .AddMethod(__Method_Release, serviceImpl.Release)
          .AddMethod(__Method_SetSymbolList, serviceImpl.SetSymbolList)
          .AddMethod(__Method_GetSymbolList, serviceImpl.GetSymbolList)
          .AddMethod(__Method_GetUndistributedDividends, serviceImpl.GetUndistributedDividends)
          .AddMethod(__Method_GetDividends, serviceImpl.GetDividends)
          .AddMethod(__Method_UpdateInformationFromCrossChain, serviceImpl.UpdateInformationFromCrossChain)
          .AddMethod(__Method_GetChainInitializationInformation, serviceImpl.GetChainInitializationInformation)
          .AddMethod(__Method_CheckCrossChainIndexingPermission, serviceImpl.CheckCrossChainIndexingPermission)
          .AddMethod(__Method_InitialAElfConsensusContract, serviceImpl.InitialAElfConsensusContract)
          .AddMethod(__Method_FirstRound, serviceImpl.FirstRound)
          .AddMethod(__Method_UpdateValue, serviceImpl.UpdateValue)
          .AddMethod(__Method_NextRound, serviceImpl.NextRound)
          .AddMethod(__Method_NextTerm, serviceImpl.NextTerm)
          .AddMethod(__Method_UpdateTinyBlockInformation, serviceImpl.UpdateTinyBlockInformation)
          .AddMethod(__Method_SetMaximumMinersCount, serviceImpl.SetMaximumMinersCount)
          .AddMethod(__Method_ChangeMaximumMinersCountController, serviceImpl.ChangeMaximumMinersCountController)
          .AddMethod(__Method_RecordCandidateReplacement, serviceImpl.RecordCandidateReplacement)
          .AddMethod(__Method_GetCurrentMinerList, serviceImpl.GetCurrentMinerList)
          .AddMethod(__Method_GetCurrentMinerPubkeyList, serviceImpl.GetCurrentMinerPubkeyList)
          .AddMethod(__Method_GetCurrentMinerListWithRoundNumber, serviceImpl.GetCurrentMinerListWithRoundNumber)
          .AddMethod(__Method_GetRoundInformation, serviceImpl.GetRoundInformation)
          .AddMethod(__Method_GetCurrentRoundNumber, serviceImpl.GetCurrentRoundNumber)
          .AddMethod(__Method_GetCurrentRoundInformation, serviceImpl.GetCurrentRoundInformation)
          .AddMethod(__Method_GetPreviousRoundInformation, serviceImpl.GetPreviousRoundInformation)
          .AddMethod(__Method_GetCurrentTermNumber, serviceImpl.GetCurrentTermNumber)
          .AddMethod(__Method_GetCurrentTermMiningReward, serviceImpl.GetCurrentTermMiningReward)
          .AddMethod(__Method_GetMinerList, serviceImpl.GetMinerList)
          .AddMethod(__Method_GetPreviousMinerList, serviceImpl.GetPreviousMinerList)
          .AddMethod(__Method_GetMinedBlocksOfPreviousTerm, serviceImpl.GetMinedBlocksOfPreviousTerm)
          .AddMethod(__Method_GetNextMinerPubkey, serviceImpl.GetNextMinerPubkey)
          .AddMethod(__Method_IsCurrentMiner, serviceImpl.IsCurrentMiner)
          .AddMethod(__Method_GetNextElectCountDown, serviceImpl.GetNextElectCountDown)
          .AddMethod(__Method_GetPreviousTermInformation, serviceImpl.GetPreviousTermInformation)
          .AddMethod(__Method_GetRandomHash, serviceImpl.GetRandomHash)
          .AddMethod(__Method_GetMaximumBlocksCount, serviceImpl.GetMaximumBlocksCount)
          .AddMethod(__Method_GetMaximumMinersCount, serviceImpl.GetMaximumMinersCount)
          .AddMethod(__Method_GetMaximumMinersCountController, serviceImpl.GetMaximumMinersCountController)
          .AddMethod(__Method_GetMainChainCurrentMinerList, serviceImpl.GetMainChainCurrentMinerList)
          .AddMethod(__Method_GetPreviousTermMinerPubkeyList, serviceImpl.GetPreviousTermMinerPubkeyList)
          .AddMethod(__Method_GetCurrentMiningRewardPerBlock, serviceImpl.GetCurrentMiningRewardPerBlock).Build();
    }

  }
}
#endregion

