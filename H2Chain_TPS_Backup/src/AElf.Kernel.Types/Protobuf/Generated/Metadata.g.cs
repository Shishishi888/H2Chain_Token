// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Kernel.SmartContract.Metadata {

  /// <summary>Holder for reflection information generated from metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXRhZGF0YS5wcm90byJ6Cg5EYXRhQWNjZXNzUGF0aBIMCgRwYXRoGAEg",
            "AygJEigKBG1vZGUYAiABKA4yGi5EYXRhQWNjZXNzUGF0aC5BY2Nlc3NNb2Rl",
            "IjAKCkFjY2Vzc01vZGUSDQoJVU5ERUZJTkVEEAASCAoEUkVBRBABEgkKBVdS",
            "SVRFEAIiNwoKSW5saW5lQ2FsbBIUCgxhZGRyZXNzX3BhdGgYASADKAkSEwoL",
            "bWV0aG9kX25hbWUYAiABKAlCJaoCIkFFbGYuS2VybmVsLlNtYXJ0Q29udHJh",
            "Y3QuTWV0YWRhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SmartContract.Metadata.DataAccessPath), global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Parser, new[]{ "Path", "Mode" }, null, new[]{ typeof(global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.SmartContract.Metadata.InlineCall), global::AElf.Kernel.SmartContract.Metadata.InlineCall.Parser, new[]{ "AddressPath", "MethodName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataAccessPath : pb::IMessage<DataAccessPath> {
    private static readonly pb::MessageParser<DataAccessPath> _parser = new pb::MessageParser<DataAccessPath>(() => new DataAccessPath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataAccessPath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.SmartContract.Metadata.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataAccessPath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataAccessPath(DataAccessPath other) : this() {
      path_ = other.path_.Clone();
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataAccessPath Clone() {
      return new DataAccessPath(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_path_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> path_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Path {
      get { return path_; }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode mode_ = global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataAccessPath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataAccessPath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!path_.Equals(other.path_)) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= path_.GetHashCode();
      if (Mode != global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode.Undefined) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      path_.WriteTo(output, _repeated_path_codec);
      if (Mode != global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode.Undefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += path_.CalculateSize(_repeated_path_codec);
      if (Mode != global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataAccessPath other) {
      if (other == null) {
        return;
      }
      path_.Add(other.path_);
      if (other.Mode != global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode.Undefined) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
          case 16: {
            Mode = (global::AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DataAccessPath message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AccessMode {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("READ")] Read = 1,
        [pbr::OriginalName("WRITE")] Write = 2,
      }

    }
    #endregion

  }

  public sealed partial class InlineCall : pb::IMessage<InlineCall> {
    private static readonly pb::MessageParser<InlineCall> _parser = new pb::MessageParser<InlineCall>(() => new InlineCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InlineCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.SmartContract.Metadata.MetadataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InlineCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InlineCall(InlineCall other) : this() {
      addressPath_ = other.addressPath_.Clone();
      methodName_ = other.methodName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InlineCall Clone() {
      return new InlineCall(this);
    }

    /// <summary>Field number for the "address_path" field.</summary>
    public const int AddressPathFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addressPath_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addressPath_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AddressPath {
      get { return addressPath_; }
    }

    /// <summary>Field number for the "method_name" field.</summary>
    public const int MethodNameFieldNumber = 2;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InlineCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InlineCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addressPath_.Equals(other.addressPath_)) return false;
      if (MethodName != other.MethodName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addressPath_.GetHashCode();
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addressPath_.WriteTo(output, _repeated_addressPath_codec);
      if (MethodName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MethodName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addressPath_.CalculateSize(_repeated_addressPath_codec);
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InlineCall other) {
      if (other == null) {
        return;
      }
      addressPath_.Add(other.addressPath_);
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addressPath_.AddEntriesFrom(input, _repeated_addressPath_codec);
            break;
          }
          case 18: {
            MethodName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
