// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: economic_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// Economic contract.
//
// The Economic contract establishes the economic system of the AElf. When the block chain starts to work, 
// this contract will initialize other contracts related to economic activities.
// 
// Implement AElf Standards ACS1.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Economic {

  #region Events
  #endregion
  public static partial class EconomicContractImplContainer
  {
    static readonly string __ServiceName = "EconomicImpl.EconomicContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS1.MethodFees> __Marshaller_acs1_MethodFees = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS1.MethodFees.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Economic.IssueNativeTokenInput> __Marshaller_Economic_IssueNativeTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Economic.IssueNativeTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Economic.InitialEconomicSystemInput> __Marshaller_Economic_InitialEconomicSystemInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Economic.InitialEconomicSystemInput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMethodFee = new aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMethodFee",
        __Marshaller_acs1_MethodFees,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMethodFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMethodFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees> __Method_GetMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_acs1_MethodFees);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMethodFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::AElf.Contracts.Economic.IssueNativeTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_IssueNativeToken = new aelf::Method<global::AElf.Contracts.Economic.IssueNativeTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "IssueNativeToken",
        __Marshaller_Economic_IssueNativeTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Economic.InitialEconomicSystemInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitialEconomicSystem = new aelf::Method<global::AElf.Contracts.Economic.InitialEconomicSystemInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitialEconomicSystem",
        __Marshaller_Economic_InitialEconomicSystemInput,
        __Marshaller_google_protobuf_Empty);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.Economic.EconomicContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS1.Acs1Reflection.Descriptor.Services[0],
          global::AElf.Contracts.Economic.EconomicContractReflection.Descriptor.Services[0],
          global::AElf.Contracts.Economic.EconomicContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of EconomicContractImpl</summary>
    public abstract partial class EconomicContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.Economic.EconomicContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMethodFee(global::AElf.Standards.ACS1.MethodFees input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMethodFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS1.MethodFees GetMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetMethodFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty IssueNativeToken(global::AElf.Contracts.Economic.IssueNativeTokenInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty InitialEconomicSystem(global::AElf.Contracts.Economic.InitialEconomicSystemInput input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(EconomicContractImplBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_SetMethodFee, serviceImpl.SetMethodFee)
          .AddMethod(__Method_ChangeMethodFeeController, serviceImpl.ChangeMethodFeeController)
          .AddMethod(__Method_GetMethodFee, serviceImpl.GetMethodFee)
          .AddMethod(__Method_GetMethodFeeController, serviceImpl.GetMethodFeeController)
          .AddMethod(__Method_IssueNativeToken, serviceImpl.IssueNativeToken)
          .AddMethod(__Method_InitialEconomicSystem, serviceImpl.InitialEconomicSystem).Build();
    }

  }
}
#endregion

