// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: token_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// MultiToken contract.
//
// The MultiToken contract is mainly used to manage the user's account and transaction fees related Settings.
// 
// Implement AElf Standards ACS1 and ACS2.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.MultiToken {

  #region Events
  #endregion
  public static partial class TokenContractImplContainer
  {
    static readonly string __ServiceName = "tokenimpl.TokenContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS1.MethodFees> __Marshaller_acs1_MethodFees = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS1.MethodFees.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Transaction> __Marshaller_aelf_Transaction = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Transaction.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Standards.ACS2.ResourceInfo> __Marshaller_acs2_ResourceInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS2.ResourceInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CreateInput> __Marshaller_token_CreateInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CreateInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.IssueInput> __Marshaller_token_IssueInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.IssueInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TransferInput> __Marshaller_token_TransferInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TransferInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TransferFromInput> __Marshaller_token_TransferFromInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TransferFromInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ApproveInput> __Marshaller_token_ApproveInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ApproveInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UnApproveInput> __Marshaller_token_UnApproveInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UnApproveInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.LockInput> __Marshaller_token_LockInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.LockInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UnlockInput> __Marshaller_token_UnlockInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UnlockInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.BurnInput> __Marshaller_token_BurnInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.BurnInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput> __Marshaller_token_ChangeTokenIssuerInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput> __Marshaller_token_SetPrimaryTokenSymbolInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CrossChainTransferInput> __Marshaller_token_CrossChainTransferInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CrossChainTransferInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput> __Marshaller_token_CrossChainReceiveTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput> __Marshaller_token_CrossChainCreateTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput> __Marshaller_token_InitializeFromParentChainInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.InitializeFromParentChainInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap> __Marshaller_token_TotalTransactionFeesMap = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TotalTransactionFeesMap.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput> __Marshaller_token_ChargeTransactionFeesInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput> __Marshaller_token_ChargeTransactionFeesOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CheckThresholdInput> __Marshaller_token_CheckThresholdInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CheckThresholdInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps> __Marshaller_token_TotalResourceTokensMaps = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TotalResourceTokensMaps.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput> __Marshaller_token_ChargeResourceTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ChargeResourceTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee> __Marshaller_token_SymbolListToPayTxSizeFee = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput> __Marshaller_token_UpdateCoefficientsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UpdateCoefficientsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetTokenInfoInput> __Marshaller_token_GetTokenInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetTokenInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TokenInfo> __Marshaller_token_TokenInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TokenInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TokenInfoList> __Marshaller_token_TokenInfoList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TokenInfoList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetBalanceInput> __Marshaller_token_GetBalanceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetBalanceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetBalanceOutput> __Marshaller_token_GetBalanceOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetBalanceOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetAllowanceInput> __Marshaller_token_GetAllowanceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetAllowanceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetAllowanceOutput> __Marshaller_token_GetAllowanceOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetAllowanceOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.IsInWhiteListInput> __Marshaller_token_IsInWhiteListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.IsInWhiteListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetLockedAmountInput> __Marshaller_token_GetLockedAmountInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetLockedAmountInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetLockedAmountOutput> __Marshaller_token_GetLockedAmountOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetLockedAmountOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput> __Marshaller_token_GetCrossChainTransferTokenContractAddressInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int32Value> __Marshaller_google_protobuf_Int32Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int32Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> __Marshaller_token_CalculateFeeCoefficients = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.CalculateFeeCoefficients.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.AdvanceResourceTokenInput> __Marshaller_tokenimpl_AdvanceResourceTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.AdvanceResourceTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TakeResourceTokenBackInput> __Marshaller_tokenimpl_TakeResourceTokenBackInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TakeResourceTokenBackInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput> __Marshaller_tokenimpl_RegisterCrossChainTokenContractAddressInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput> __Marshaller_tokenimpl_ValidateTokenInfoExistsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UpdateRentalInput> __Marshaller_tokenimpl_UpdateRentalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UpdateRentalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UpdateRentedResourcesInput> __Marshaller_tokenimpl_UpdateRentedResourcesInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UpdateRentedResourcesInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.TransferToContractInput> __Marshaller_tokenimpl_TransferToContractInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.TransferToContractInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.ResourceUsage> __Marshaller_tokenimpl_ResourceUsage = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.ResourceUsage.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.UserFeeController> __Marshaller_tokenimpl_UserFeeController = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.UserFeeController.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.DeveloperFeeController> __Marshaller_tokenimpl_DeveloperFeeController = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.DeveloperFeeController.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput> __Marshaller_tokenimpl_GetVirtualAddressForLockingInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.OwningRental> __Marshaller_tokenimpl_OwningRental = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.OwningRental.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.MultiToken.OwningRentalUnitValue> __Marshaller_tokenimpl_OwningRentalUnitValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.MultiToken.OwningRentalUnitValue.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMethodFee = new aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMethodFee",
        __Marshaller_acs1_MethodFees,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMethodFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMethodFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees> __Method_GetMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_acs1_MethodFees);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMethodFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::AElf.Types.Transaction, global::AElf.Standards.ACS2.ResourceInfo> __Method_GetResourceInfo = new aelf::Method<global::AElf.Types.Transaction, global::AElf.Standards.ACS2.ResourceInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetResourceInfo",
        __Marshaller_aelf_Transaction,
        __Marshaller_acs2_ResourceInfo);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CreateInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Create = new aelf::Method<global::AElf.Contracts.MultiToken.CreateInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Create",
        __Marshaller_token_CreateInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.IssueInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Issue = new aelf::Method<global::AElf.Contracts.MultiToken.IssueInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Issue",
        __Marshaller_token_IssueInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TransferInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Transfer = new aelf::Method<global::AElf.Contracts.MultiToken.TransferInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Transfer",
        __Marshaller_token_TransferInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TransferFromInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TransferFrom = new aelf::Method<global::AElf.Contracts.MultiToken.TransferFromInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "TransferFrom",
        __Marshaller_token_TransferFromInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ApproveInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Approve = new aelf::Method<global::AElf.Contracts.MultiToken.ApproveInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Approve",
        __Marshaller_token_ApproveInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UnApproveInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UnApprove = new aelf::Method<global::AElf.Contracts.MultiToken.UnApproveInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UnApprove",
        __Marshaller_token_UnApproveInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.LockInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Lock = new aelf::Method<global::AElf.Contracts.MultiToken.LockInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Lock",
        __Marshaller_token_LockInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UnlockInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Unlock = new aelf::Method<global::AElf.Contracts.MultiToken.UnlockInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Unlock",
        __Marshaller_token_UnlockInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.BurnInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Burn = new aelf::Method<global::AElf.Contracts.MultiToken.BurnInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Burn",
        __Marshaller_token_BurnInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeTokenIssuer = new aelf::Method<global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeTokenIssuer",
        __Marshaller_token_ChangeTokenIssuerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetPrimaryTokenSymbol = new aelf::Method<global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetPrimaryTokenSymbol",
        __Marshaller_token_SetPrimaryTokenSymbolInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CrossChainTransferInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CrossChainTransfer = new aelf::Method<global::AElf.Contracts.MultiToken.CrossChainTransferInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CrossChainTransfer",
        __Marshaller_token_CrossChainTransferInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CrossChainReceiveToken = new aelf::Method<global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CrossChainReceiveToken",
        __Marshaller_token_CrossChainReceiveTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CrossChainCreateToken = new aelf::Method<global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CrossChainCreateToken",
        __Marshaller_token_CrossChainCreateTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitializeFromParentChain = new aelf::Method<global::AElf.Contracts.MultiToken.InitializeFromParentChainInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitializeFromParentChain",
        __Marshaller_token_InitializeFromParentChainInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClaimTransactionFees = new aelf::Method<global::AElf.Contracts.MultiToken.TotalTransactionFeesMap, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ClaimTransactionFees",
        __Marshaller_token_TotalTransactionFeesMap,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput, global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput> __Method_ChargeTransactionFees = new aelf::Method<global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput, global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChargeTransactionFees",
        __Marshaller_token_ChargeTransactionFeesInput,
        __Marshaller_token_ChargeTransactionFeesOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.CheckThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CheckThreshold = new aelf::Method<global::AElf.Contracts.MultiToken.CheckThresholdInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CheckThreshold",
        __Marshaller_token_CheckThresholdInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitialCoefficients = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitialCoefficients",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DonateResourceToken = new aelf::Method<global::AElf.Contracts.MultiToken.TotalResourceTokensMaps, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "DonateResourceToken",
        __Marshaller_token_TotalResourceTokensMaps,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChargeResourceToken = new aelf::Method<global::AElf.Contracts.MultiToken.ChargeResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChargeResourceToken",
        __Marshaller_token_ChargeResourceTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CheckResourceToken = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CheckResourceToken",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSymbolsToPayTxSizeFee = new aelf::Method<global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSymbolsToPayTxSizeFee",
        __Marshaller_token_SymbolListToPayTxSizeFee,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateCoefficientsForSender = new aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateCoefficientsForSender",
        __Marshaller_token_UpdateCoefficientsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateCoefficientsForContract = new aelf::Method<global::AElf.Contracts.MultiToken.UpdateCoefficientsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateCoefficientsForContract",
        __Marshaller_token_UpdateCoefficientsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_InitializeAuthorizedController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "InitializeAuthorizedController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetTokenInfoInput, global::AElf.Contracts.MultiToken.TokenInfo> __Method_GetTokenInfo = new aelf::Method<global::AElf.Contracts.MultiToken.GetTokenInfoInput, global::AElf.Contracts.MultiToken.TokenInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenInfo",
        __Marshaller_token_GetTokenInfoInput,
        __Marshaller_token_TokenInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfo> __Method_GetNativeTokenInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetNativeTokenInfo",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_TokenInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfoList> __Method_GetResourceTokenInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.TokenInfoList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetResourceTokenInfo",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_TokenInfoList);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetBalanceInput, global::AElf.Contracts.MultiToken.GetBalanceOutput> __Method_GetBalance = new aelf::Method<global::AElf.Contracts.MultiToken.GetBalanceInput, global::AElf.Contracts.MultiToken.GetBalanceOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetBalance",
        __Marshaller_token_GetBalanceInput,
        __Marshaller_token_GetBalanceOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetAllowanceInput, global::AElf.Contracts.MultiToken.GetAllowanceOutput> __Method_GetAllowance = new aelf::Method<global::AElf.Contracts.MultiToken.GetAllowanceInput, global::AElf.Contracts.MultiToken.GetAllowanceOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAllowance",
        __Marshaller_token_GetAllowanceInput,
        __Marshaller_token_GetAllowanceOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.IsInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsInWhiteList = new aelf::Method<global::AElf.Contracts.MultiToken.IsInWhiteListInput, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsInWhiteList",
        __Marshaller_token_IsInWhiteListInput,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetLockedAmountInput, global::AElf.Contracts.MultiToken.GetLockedAmountOutput> __Method_GetLockedAmount = new aelf::Method<global::AElf.Contracts.MultiToken.GetLockedAmountInput, global::AElf.Contracts.MultiToken.GetLockedAmountOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLockedAmount",
        __Marshaller_token_GetLockedAmountInput,
        __Marshaller_token_GetLockedAmountOutput);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput, global::AElf.Types.Address> __Method_GetCrossChainTransferTokenContractAddress = new aelf::Method<global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCrossChainTransferTokenContractAddress",
        __Marshaller_token_GetCrossChainTransferTokenContractAddressInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetPrimaryTokenSymbol = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPrimaryTokenSymbol",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> __Method_GetCalculateFeeCoefficientsForContract = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int32Value, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCalculateFeeCoefficientsForContract",
        __Marshaller_google_protobuf_Int32Value,
        __Marshaller_token_CalculateFeeCoefficients);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients> __Method_GetCalculateFeeCoefficientsForSender = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.CalculateFeeCoefficients>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCalculateFeeCoefficientsForSender",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_CalculateFeeCoefficients);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee> __Method_GetSymbolsToPayTxSizeFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSymbolsToPayTxSizeFee",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_token_SymbolListToPayTxSizeFee);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash> __Method_GetLatestTotalTransactionFeesMapHash = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLatestTotalTransactionFeesMapHash",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash> __Method_GetLatestTotalResourceTokensMapsHash = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLatestTotalResourceTokensMapsHash",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsTokenAvailableForMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsTokenAvailableForMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.AdvanceResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AdvanceResourceToken = new aelf::Method<global::AElf.Contracts.MultiToken.AdvanceResourceTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AdvanceResourceToken",
        __Marshaller_tokenimpl_AdvanceResourceTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TakeResourceTokenBackInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TakeResourceTokenBack = new aelf::Method<global::AElf.Contracts.MultiToken.TakeResourceTokenBackInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "TakeResourceTokenBack",
        __Marshaller_tokenimpl_TakeResourceTokenBackInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RegisterCrossChainTokenContractAddress = new aelf::Method<global::AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RegisterCrossChainTokenContractAddress",
        __Marshaller_tokenimpl_RegisterCrossChainTokenContractAddressInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetFeeReceiver = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetFeeReceiver",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ValidateTokenInfoExists = new aelf::Method<global::AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ValidateTokenInfoExists",
        __Marshaller_tokenimpl_ValidateTokenInfoExistsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UpdateRentalInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateRental = new aelf::Method<global::AElf.Contracts.MultiToken.UpdateRentalInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateRental",
        __Marshaller_tokenimpl_UpdateRentalInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.UpdateRentedResourcesInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateRentedResources = new aelf::Method<global::AElf.Contracts.MultiToken.UpdateRentedResourcesInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateRentedResources",
        __Marshaller_tokenimpl_UpdateRentedResourcesInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.TransferToContractInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TransferToContract = new aelf::Method<global::AElf.Contracts.MultiToken.TransferToContractInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "TransferToContract",
        __Marshaller_tokenimpl_TransferToContractInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeSideChainRentalController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeSideChainRentalController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeSymbolsToPayTXSizeFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeSymbolsToPayTXSizeFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeCrossChainTokenContractRegistrationController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeCrossChainTokenContractRegistrationController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeUserFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeUserFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeDeveloperController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeDeveloperController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetFeeReceiver = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetFeeReceiver",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.ResourceUsage> __Method_GetResourceUsage = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.ResourceUsage>(
        aelf::MethodType.View,
        __ServiceName,
        "GetResourceUsage",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_tokenimpl_ResourceUsage);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetSymbolsToPayTXSizeFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSymbolsToPayTXSizeFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetCrossChainTokenContractRegistrationController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCrossChainTokenContractRegistrationController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.UserFeeController> __Method_GetUserFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.UserFeeController>(
        aelf::MethodType.View,
        __ServiceName,
        "GetUserFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_tokenimpl_UserFeeController);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.DeveloperFeeController> __Method_GetDeveloperFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.DeveloperFeeController>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDeveloperFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_tokenimpl_DeveloperFeeController);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetSideChainRentalControllerCreateInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSideChainRentalControllerCreateInfo",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput, global::AElf.Types.Address> __Method_GetVirtualAddressForLocking = new aelf::Method<global::AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetVirtualAddressForLocking",
        __Marshaller_tokenimpl_GetVirtualAddressForLockingInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.OwningRental> __Method_GetOwningRental = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.OwningRental>(
        aelf::MethodType.View,
        __ServiceName,
        "GetOwningRental",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_tokenimpl_OwningRental);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.OwningRentalUnitValue> __Method_GetOwningRentalUnitValue = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.MultiToken.OwningRentalUnitValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetOwningRentalUnitValue",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_tokenimpl_OwningRentalUnitValue);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.MultiToken.TokenContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS1.Acs1Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS2.Acs2Reflection.Descriptor.Services[0],
          global::AElf.Contracts.MultiToken.TokenContractReflection.Descriptor.Services[0],
          global::AElf.Contracts.MultiToken.TokenContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of TokenContractImpl</summary>
    public abstract partial class TokenContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.MultiToken.TokenContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMethodFee(global::AElf.Standards.ACS1.MethodFees input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMethodFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS1.MethodFees GetMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetMethodFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Standards.ACS2.ResourceInfo GetResourceInfo(global::AElf.Types.Transaction input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Create(global::AElf.Contracts.MultiToken.CreateInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Issue(global::AElf.Contracts.MultiToken.IssueInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Transfer(global::AElf.Contracts.MultiToken.TransferInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty TransferFrom(global::AElf.Contracts.MultiToken.TransferFromInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Approve(global::AElf.Contracts.MultiToken.ApproveInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UnApprove(global::AElf.Contracts.MultiToken.UnApproveInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Lock(global::AElf.Contracts.MultiToken.LockInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Unlock(global::AElf.Contracts.MultiToken.UnlockInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty Burn(global::AElf.Contracts.MultiToken.BurnInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeTokenIssuer(global::AElf.Contracts.MultiToken.ChangeTokenIssuerInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetPrimaryTokenSymbol(global::AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CrossChainTransfer(global::AElf.Contracts.MultiToken.CrossChainTransferInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CrossChainReceiveToken(global::AElf.Contracts.MultiToken.CrossChainReceiveTokenInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CrossChainCreateToken(global::AElf.Contracts.MultiToken.CrossChainCreateTokenInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty InitializeFromParentChain(global::AElf.Contracts.MultiToken.InitializeFromParentChainInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ClaimTransactionFees(global::AElf.Contracts.MultiToken.TotalTransactionFeesMap input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.ChargeTransactionFeesOutput ChargeTransactionFees(global::AElf.Contracts.MultiToken.ChargeTransactionFeesInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CheckThreshold(global::AElf.Contracts.MultiToken.CheckThresholdInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty InitialCoefficients(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty DonateResourceToken(global::AElf.Contracts.MultiToken.TotalResourceTokensMaps input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChargeResourceToken(global::AElf.Contracts.MultiToken.ChargeResourceTokenInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CheckResourceToken(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSymbolsToPayTxSizeFee(global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateCoefficientsForSender(global::AElf.Contracts.MultiToken.UpdateCoefficientsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateCoefficientsForContract(global::AElf.Contracts.MultiToken.UpdateCoefficientsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty InitializeAuthorizedController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.TokenInfo GetTokenInfo(global::AElf.Contracts.MultiToken.GetTokenInfoInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.TokenInfo GetNativeTokenInfo(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.TokenInfoList GetResourceTokenInfo(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.GetBalanceOutput GetBalance(global::AElf.Contracts.MultiToken.GetBalanceInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.GetAllowanceOutput GetAllowance(global::AElf.Contracts.MultiToken.GetAllowanceInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsInWhiteList(global::AElf.Contracts.MultiToken.IsInWhiteListInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.GetLockedAmountOutput GetLockedAmount(global::AElf.Contracts.MultiToken.GetLockedAmountInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetCrossChainTransferTokenContractAddress(global::AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetPrimaryTokenSymbol(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.CalculateFeeCoefficients GetCalculateFeeCoefficientsForContract(global::Google.Protobuf.WellKnownTypes.Int32Value input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.CalculateFeeCoefficients GetCalculateFeeCoefficientsForSender(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee GetSymbolsToPayTxSizeFee(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Hash GetLatestTotalTransactionFeesMapHash(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Hash GetLatestTotalResourceTokensMapsHash(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsTokenAvailableForMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AdvanceResourceToken(global::AElf.Contracts.MultiToken.AdvanceResourceTokenInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty TakeResourceTokenBack(global::AElf.Contracts.MultiToken.TakeResourceTokenBackInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RegisterCrossChainTokenContractAddress(global::AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetFeeReceiver(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ValidateTokenInfoExists(global::AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateRental(global::AElf.Contracts.MultiToken.UpdateRentalInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateRentedResources(global::AElf.Contracts.MultiToken.UpdateRentedResourcesInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty TransferToContract(global::AElf.Contracts.MultiToken.TransferToContractInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeSideChainRentalController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeSymbolsToPayTXSizeFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeCrossChainTokenContractRegistrationController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeUserFeeController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeDeveloperController(global::AuthorityInfo input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetFeeReceiver(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.ResourceUsage GetResourceUsage(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetSymbolsToPayTXSizeFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetCrossChainTokenContractRegistrationController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.UserFeeController GetUserFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.DeveloperFeeController GetDeveloperFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AuthorityInfo GetSideChainRentalControllerCreateInfo(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Types.Address GetVirtualAddressForLocking(global::AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.OwningRental GetOwningRental(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.MultiToken.OwningRentalUnitValue GetOwningRentalUnitValue(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(TokenContractImplBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_SetMethodFee, serviceImpl.SetMethodFee)
          .AddMethod(__Method_ChangeMethodFeeController, serviceImpl.ChangeMethodFeeController)
          .AddMethod(__Method_GetMethodFee, serviceImpl.GetMethodFee)
          .AddMethod(__Method_GetMethodFeeController, serviceImpl.GetMethodFeeController)
          .AddMethod(__Method_GetResourceInfo, serviceImpl.GetResourceInfo)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Issue, serviceImpl.Issue)
          .AddMethod(__Method_Transfer, serviceImpl.Transfer)
          .AddMethod(__Method_TransferFrom, serviceImpl.TransferFrom)
          .AddMethod(__Method_Approve, serviceImpl.Approve)
          .AddMethod(__Method_UnApprove, serviceImpl.UnApprove)
          .AddMethod(__Method_Lock, serviceImpl.Lock)
          .AddMethod(__Method_Unlock, serviceImpl.Unlock)
          .AddMethod(__Method_Burn, serviceImpl.Burn)
          .AddMethod(__Method_ChangeTokenIssuer, serviceImpl.ChangeTokenIssuer)
          .AddMethod(__Method_SetPrimaryTokenSymbol, serviceImpl.SetPrimaryTokenSymbol)
          .AddMethod(__Method_CrossChainTransfer, serviceImpl.CrossChainTransfer)
          .AddMethod(__Method_CrossChainReceiveToken, serviceImpl.CrossChainReceiveToken)
          .AddMethod(__Method_CrossChainCreateToken, serviceImpl.CrossChainCreateToken)
          .AddMethod(__Method_InitializeFromParentChain, serviceImpl.InitializeFromParentChain)
          .AddMethod(__Method_ClaimTransactionFees, serviceImpl.ClaimTransactionFees)
          .AddMethod(__Method_ChargeTransactionFees, serviceImpl.ChargeTransactionFees)
          .AddMethod(__Method_CheckThreshold, serviceImpl.CheckThreshold)
          .AddMethod(__Method_InitialCoefficients, serviceImpl.InitialCoefficients)
          .AddMethod(__Method_DonateResourceToken, serviceImpl.DonateResourceToken)
          .AddMethod(__Method_ChargeResourceToken, serviceImpl.ChargeResourceToken)
          .AddMethod(__Method_CheckResourceToken, serviceImpl.CheckResourceToken)
          .AddMethod(__Method_SetSymbolsToPayTxSizeFee, serviceImpl.SetSymbolsToPayTxSizeFee)
          .AddMethod(__Method_UpdateCoefficientsForSender, serviceImpl.UpdateCoefficientsForSender)
          .AddMethod(__Method_UpdateCoefficientsForContract, serviceImpl.UpdateCoefficientsForContract)
          .AddMethod(__Method_InitializeAuthorizedController, serviceImpl.InitializeAuthorizedController)
          .AddMethod(__Method_GetTokenInfo, serviceImpl.GetTokenInfo)
          .AddMethod(__Method_GetNativeTokenInfo, serviceImpl.GetNativeTokenInfo)
          .AddMethod(__Method_GetResourceTokenInfo, serviceImpl.GetResourceTokenInfo)
          .AddMethod(__Method_GetBalance, serviceImpl.GetBalance)
          .AddMethod(__Method_GetAllowance, serviceImpl.GetAllowance)
          .AddMethod(__Method_IsInWhiteList, serviceImpl.IsInWhiteList)
          .AddMethod(__Method_GetLockedAmount, serviceImpl.GetLockedAmount)
          .AddMethod(__Method_GetCrossChainTransferTokenContractAddress, serviceImpl.GetCrossChainTransferTokenContractAddress)
          .AddMethod(__Method_GetPrimaryTokenSymbol, serviceImpl.GetPrimaryTokenSymbol)
          .AddMethod(__Method_GetCalculateFeeCoefficientsForContract, serviceImpl.GetCalculateFeeCoefficientsForContract)
          .AddMethod(__Method_GetCalculateFeeCoefficientsForSender, serviceImpl.GetCalculateFeeCoefficientsForSender)
          .AddMethod(__Method_GetSymbolsToPayTxSizeFee, serviceImpl.GetSymbolsToPayTxSizeFee)
          .AddMethod(__Method_GetLatestTotalTransactionFeesMapHash, serviceImpl.GetLatestTotalTransactionFeesMapHash)
          .AddMethod(__Method_GetLatestTotalResourceTokensMapsHash, serviceImpl.GetLatestTotalResourceTokensMapsHash)
          .AddMethod(__Method_IsTokenAvailableForMethodFee, serviceImpl.IsTokenAvailableForMethodFee)
          .AddMethod(__Method_AdvanceResourceToken, serviceImpl.AdvanceResourceToken)
          .AddMethod(__Method_TakeResourceTokenBack, serviceImpl.TakeResourceTokenBack)
          .AddMethod(__Method_RegisterCrossChainTokenContractAddress, serviceImpl.RegisterCrossChainTokenContractAddress)
          .AddMethod(__Method_SetFeeReceiver, serviceImpl.SetFeeReceiver)
          .AddMethod(__Method_ValidateTokenInfoExists, serviceImpl.ValidateTokenInfoExists)
          .AddMethod(__Method_UpdateRental, serviceImpl.UpdateRental)
          .AddMethod(__Method_UpdateRentedResources, serviceImpl.UpdateRentedResources)
          .AddMethod(__Method_TransferToContract, serviceImpl.TransferToContract)
          .AddMethod(__Method_ChangeSideChainRentalController, serviceImpl.ChangeSideChainRentalController)
          .AddMethod(__Method_ChangeSymbolsToPayTXSizeFeeController, serviceImpl.ChangeSymbolsToPayTXSizeFeeController)
          .AddMethod(__Method_ChangeCrossChainTokenContractRegistrationController, serviceImpl.ChangeCrossChainTokenContractRegistrationController)
          .AddMethod(__Method_ChangeUserFeeController, serviceImpl.ChangeUserFeeController)
          .AddMethod(__Method_ChangeDeveloperController, serviceImpl.ChangeDeveloperController)
          .AddMethod(__Method_GetFeeReceiver, serviceImpl.GetFeeReceiver)
          .AddMethod(__Method_GetResourceUsage, serviceImpl.GetResourceUsage)
          .AddMethod(__Method_GetSymbolsToPayTXSizeFeeController, serviceImpl.GetSymbolsToPayTXSizeFeeController)
          .AddMethod(__Method_GetCrossChainTokenContractRegistrationController, serviceImpl.GetCrossChainTokenContractRegistrationController)
          .AddMethod(__Method_GetUserFeeController, serviceImpl.GetUserFeeController)
          .AddMethod(__Method_GetDeveloperFeeController, serviceImpl.GetDeveloperFeeController)
          .AddMethod(__Method_GetSideChainRentalControllerCreateInfo, serviceImpl.GetSideChainRentalControllerCreateInfo)
          .AddMethod(__Method_GetVirtualAddressForLocking, serviceImpl.GetVirtualAddressForLocking)
          .AddMethod(__Method_GetOwningRental, serviceImpl.GetOwningRental)
          .AddMethod(__Method_GetOwningRentalUnitValue, serviceImpl.GetOwningRentalUnitValue).Build();
    }

  }
}
#endregion

