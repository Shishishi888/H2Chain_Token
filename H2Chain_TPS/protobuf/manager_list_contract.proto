/**
 * ManagerListContract contract.
 */
syntax = "proto3";

package ManagerListContract;

import public "aelf/options.proto";
import public "aelf/core.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "AElf.Contracts.ManagerList";

service ManagerListContract {

    option (aelf.csharp_state) = "AElf.Contracts.ManagerList.ManagerListState";

    rpc Initialize(google.protobuf.Empty) returns (google.protobuf.Empty){
    }

    rpc SetSuperAdminAddress(aelf.Address) returns (google.protobuf.Empty) {
    }

    rpc HasSetSuperAdminAddress(google.protobuf.Empty) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    }

    rpc AddManager(aelf.Address) returns (google.protobuf.Empty) {
    }

    rpc RemoveManager(aelf.Address) returns (google.protobuf.Empty) {
    }

    rpc CheckManager(aelf.Address) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    }

    rpc SetTransferMode(google.protobuf.BoolValue) returns (google.protobuf.Empty) {
    }

    rpc GetTransferMode(google.protobuf.Empty) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    }

    rpc TestMySystemContract(google.protobuf.Empty) returns (google.protobuf.StringValue) {
        // option (aelf.is_view) = true;
    }
    
    rpc AddContractAddressToBlackList(aelf.Address) returns (google.protobuf.Empty) {
    }
    
    rpc RemoveContractAddressFromBlackList(aelf.Address) returns (google.protobuf.Empty) {
    }
    
    rpc CheckContractAddressInBlackList(aelf.Address) returns (google.protobuf.BoolValue) {
            option (aelf.is_view) = true;
    }

    rpc AddUserToBlackList(aelf.Address) returns (google.protobuf.Empty) {
    }

    rpc RemoveUserFromBlackList(aelf.Address) returns (google.protobuf.Empty) {
    }
    
    rpc CheckUserInBlackList(aelf.Address) returns (google.protobuf.BoolValue) {
            option (aelf.is_view) = true;
    }   
}

