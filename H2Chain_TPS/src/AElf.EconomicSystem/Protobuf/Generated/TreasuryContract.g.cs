// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: treasury_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.Treasury {

  /// <summary>Holder for reflection information generated from treasury_contract.proto</summary>
  internal static partial class TreasuryContractReflection {

    #region Descriptor
    /// <summary>File descriptor for treasury_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TreasuryContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chd0cmVhc3VyeV9jb250cmFjdC5wcm90bxIIVHJlYXN1cnkaEmFlbGYvb3B0",
            "aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGh5nb29n",
            "bGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aD2FlbGYvY29yZS5wcm90bxoU",
            "YXV0aG9yaXR5X2luZm8ucHJvdG8iMgohR2V0V2VsZmFyZVJld2FyZEFtb3Vu",
            "dFNhbXBsZUlucHV0Eg0KBXZhbHVlGAEgAygDIjMKIkdldFdlbGZhcmVSZXdh",
            "cmRBbW91bnRTYW1wbGVPdXRwdXQSDQoFdmFsdWUYASADKAMiIAoORG9uYXRl",
            "QWxsSW5wdXQSDgoGc3ltYm9sGAEgASgJIsgBChpNaW5lclJlRWxlY3Rpb25J",
            "bmZvcm1hdGlvbhJoChtjb250aW51YWxfYXBwb2ludG1lbnRfdGltZXMYASAD",
            "KAsyQy5UcmVhc3VyeS5NaW5lclJlRWxlY3Rpb25JbmZvcm1hdGlvbi5Db250",
            "aW51YWxBcHBvaW50bWVudFRpbWVzRW50cnkaQAoeQ29udGludWFsQXBwb2lu",
            "dG1lbnRUaW1lc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoC",
            "OAEidwoZRGl2aWRlbmRQb29sV2VpZ2h0U2V0dGluZxIeChZjaXRpemVuX3dl",
            "bGZhcmVfd2VpZ2h0GAEgASgFEh0KFWJhY2t1cF9zdWJzaWR5X3dlaWdodBgC",
            "IAEoBRIbChNtaW5lcl9yZXdhcmRfd2VpZ2h0GAMgASgFIoQBChhNaW5lclJl",
            "d2FyZFdlaWdodFNldHRpbmcSIQoZYmFzaWNfbWluZXJfcmV3YXJkX3dlaWdo",
            "dBgBIAEoBRIiChp2b3Rlc193ZWlnaHRfcmV3YXJkX3dlaWdodBgCIAEoBRIh",
            "ChlyZV9lbGVjdGlvbl9yZXdhcmRfd2VpZ2h0GAMgASgFIkkKFFNjaGVtZVBy",
            "b3BvcnRpb25JbmZvEh0KCXNjaGVtZV9pZBgBIAEoCzIKLmFlbGYuSGFzaBIS",
            "Cgpwcm9wb3J0aW9uGAIgASgFIvUBChxEaXZpZGVuZFBvb2xXZWlnaHRQcm9w",
            "b3J0aW9uEkcKH2NpdGl6ZW5fd2VsZmFyZV9wcm9wb3J0aW9uX2luZm8YASAB",
            "KAsyHi5UcmVhc3VyeS5TY2hlbWVQcm9wb3J0aW9uSW5mbxJGCh5iYWNrdXBf",
            "c3Vic2lkeV9wcm9wb3J0aW9uX2luZm8YAiABKAsyHi5UcmVhc3VyeS5TY2hl",
            "bWVQcm9wb3J0aW9uSW5mbxJEChxtaW5lcl9yZXdhcmRfcHJvcG9ydGlvbl9p",
            "bmZvGAMgASgLMh4uVHJlYXN1cnkuU2NoZW1lUHJvcG9ydGlvbkluZm8iggIK",
            "G01pbmVyUmV3YXJkV2VpZ2h0UHJvcG9ydGlvbhJKCiJiYXNpY19taW5lcl9y",
            "ZXdhcmRfcHJvcG9ydGlvbl9pbmZvGAEgASgLMh4uVHJlYXN1cnkuU2NoZW1l",
            "UHJvcG9ydGlvbkluZm8SSwojdm90ZXNfd2VpZ2h0X3Jld2FyZF9wcm9wb3J0",
            "aW9uX2luZm8YAiABKAsyHi5UcmVhc3VyeS5TY2hlbWVQcm9wb3J0aW9uSW5m",
            "bxJKCiJyZV9lbGVjdGlvbl9yZXdhcmRfcHJvcG9ydGlvbl9pbmZvGAMgASgL",
            "Mh4uVHJlYXN1cnkuU2NoZW1lUHJvcG9ydGlvbkluZm8iYgobUmVjb3JkTWlu",
            "ZXJSZXBsYWNlbWVudElucHV0EhIKCm9sZF9wdWJrZXkYASABKAkSEgoKbmV3",
            "X3B1YmtleRgCIAEoCRIbChNjdXJyZW50X3Rlcm1fbnVtYmVyGAMgASgDMrAJ",
            "ChBUcmVhc3VyeUNvbnRyYWN0EksKF0luaXRpYWxUcmVhc3VyeUNvbnRyYWN0",
            "EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5IgASUQodSW5pdGlhbE1pbmluZ1Jld2FyZFByb2ZpdEl0ZW0SFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI/",
            "CglEb25hdGVBbGwSGC5UcmVhc3VyeS5Eb25hdGVBbGxJbnB1dBoWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eSIAEl0KHFNldERpdmlkZW5kUG9vbFdlaWdodFNl",
            "dHRpbmcSIy5UcmVhc3VyeS5EaXZpZGVuZFBvb2xXZWlnaHRTZXR0aW5nGhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASWwobU2V0TWluZXJSZXdhcmRXZWln",
            "aHRTZXR0aW5nEiIuVHJlYXN1cnkuTWluZXJSZXdhcmRXZWlnaHRTZXR0aW5n",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASSwoSVXBkYXRlTWluaW5nUmV3",
            "YXJkEhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUaFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkiABJEChhDaGFuZ2VUcmVhc3VyeUNvbnRyb2xsZXISDi5B",
            "dXRob3JpdHlJbmZvGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASWQoWUmVj",
            "b3JkTWluZXJSZXBsYWNlbWVudBIlLlRyZWFzdXJ5LlJlY29yZE1pbmVyUmVw",
            "bGFjZW1lbnRJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEoABChxH",
            "ZXRXZWxmYXJlUmV3YXJkQW1vdW50U2FtcGxlEisuVHJlYXN1cnkuR2V0V2Vs",
            "ZmFyZVJld2FyZEFtb3VudFNhbXBsZUlucHV0GiwuVHJlYXN1cnkuR2V0V2Vs",
            "ZmFyZVJld2FyZEFtb3VudFNhbXBsZU91dHB1dCIFiIn3AQESQAoTR2V0VHJl",
            "YXN1cnlTY2hlbWVJZBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoKLmFlbGYu",
            "SGFzaCIFiIn3AQESaAofR2V0RGl2aWRlbmRQb29sV2VpZ2h0UHJvcG9ydGlv",
            "bhIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRomLlRyZWFzdXJ5LkRpdmlkZW5k",
            "UG9vbFdlaWdodFByb3BvcnRpb24iBYiJ9wEBEmYKHkdldE1pbmVyUmV3YXJk",
            "V2VpZ2h0UHJvcG9ydGlvbhIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRolLlRy",
            "ZWFzdXJ5Lk1pbmVyUmV3YXJkV2VpZ2h0UHJvcG9ydGlvbiIFiIn3AQESRgoV",
            "R2V0VHJlYXN1cnlDb250cm9sbGVyEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "Gg4uQXV0aG9yaXR5SW5mbyIFiIn3AQEaMrLM9gEtQUVsZi5Db250cmFjdHMu",
            "VHJlYXN1cnkuVHJlYXN1cnlDb250cmFjdFN0YXRlQhqqAhdBRWxmLkNvbnRy",
            "YWN0cy5UcmVhc3VyeWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::AElf.Types.CoreReflection.Descriptor, global::AuthorityInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.GetWelfareRewardAmountSampleInput), global::AElf.Contracts.Treasury.GetWelfareRewardAmountSampleInput.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.GetWelfareRewardAmountSampleOutput), global::AElf.Contracts.Treasury.GetWelfareRewardAmountSampleOutput.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.DonateAllInput), global::AElf.Contracts.Treasury.DonateAllInput.Parser, new[]{ "Symbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.MinerReElectionInformation), global::AElf.Contracts.Treasury.MinerReElectionInformation.Parser, new[]{ "ContinualAppointmentTimes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.DividendPoolWeightSetting), global::AElf.Contracts.Treasury.DividendPoolWeightSetting.Parser, new[]{ "CitizenWelfareWeight", "BackupSubsidyWeight", "MinerRewardWeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.MinerRewardWeightSetting), global::AElf.Contracts.Treasury.MinerRewardWeightSetting.Parser, new[]{ "BasicMinerRewardWeight", "VotesWeightRewardWeight", "ReElectionRewardWeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.SchemeProportionInfo), global::AElf.Contracts.Treasury.SchemeProportionInfo.Parser, new[]{ "SchemeId", "Proportion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.DividendPoolWeightProportion), global::AElf.Contracts.Treasury.DividendPoolWeightProportion.Parser, new[]{ "CitizenWelfareProportionInfo", "BackupSubsidyProportionInfo", "MinerRewardProportionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.MinerRewardWeightProportion), global::AElf.Contracts.Treasury.MinerRewardWeightProportion.Parser, new[]{ "BasicMinerRewardProportionInfo", "VotesWeightRewardProportionInfo", "ReElectionRewardProportionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Treasury.RecordMinerReplacementInput), global::AElf.Contracts.Treasury.RecordMinerReplacementInput.Parser, new[]{ "OldPubkey", "NewPubkey", "CurrentTermNumber" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetWelfareRewardAmountSampleInput : pb::IMessage<GetWelfareRewardAmountSampleInput> {
    private static readonly pb::MessageParser<GetWelfareRewardAmountSampleInput> _parser = new pb::MessageParser<GetWelfareRewardAmountSampleInput>(() => new GetWelfareRewardAmountSampleInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWelfareRewardAmountSampleInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleInput(GetWelfareRewardAmountSampleInput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleInput Clone() {
      return new GetWelfareRewardAmountSampleInput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Token lock time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWelfareRewardAmountSampleInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWelfareRewardAmountSampleInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWelfareRewardAmountSampleInput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetWelfareRewardAmountSampleOutput : pb::IMessage<GetWelfareRewardAmountSampleOutput> {
    private static readonly pb::MessageParser<GetWelfareRewardAmountSampleOutput> _parser = new pb::MessageParser<GetWelfareRewardAmountSampleOutput>(() => new GetWelfareRewardAmountSampleOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWelfareRewardAmountSampleOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleOutput(GetWelfareRewardAmountSampleOutput other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWelfareRewardAmountSampleOutput Clone() {
      return new GetWelfareRewardAmountSampleOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// The weight calculated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWelfareRewardAmountSampleOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWelfareRewardAmountSampleOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWelfareRewardAmountSampleOutput other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DonateAllInput : pb::IMessage<DonateAllInput> {
    private static readonly pb::MessageParser<DonateAllInput> _parser = new pb::MessageParser<DonateAllInput>(() => new DonateAllInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DonateAllInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonateAllInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonateAllInput(DonateAllInput other) : this() {
      symbol_ = other.symbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonateAllInput Clone() {
      return new DonateAllInput(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    /// <summary>
    /// The token symbol to donate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DonateAllInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DonateAllInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DonateAllInput other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MinerReElectionInformation : pb::IMessage<MinerReElectionInformation> {
    private static readonly pb::MessageParser<MinerReElectionInformation> _parser = new pb::MessageParser<MinerReElectionInformation>(() => new MinerReElectionInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerReElectionInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerReElectionInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerReElectionInformation(MinerReElectionInformation other) : this() {
      continualAppointmentTimes_ = other.continualAppointmentTimes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerReElectionInformation Clone() {
      return new MinerReElectionInformation(this);
    }

    /// <summary>Field number for the "continual_appointment_times" field.</summary>
    public const int ContinualAppointmentTimesFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_continualAppointmentTimes_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<string, long> continualAppointmentTimes_ = new pbc::MapField<string, long>();
    /// <summary>
    /// The reappointment information for miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> ContinualAppointmentTimes {
      get { return continualAppointmentTimes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerReElectionInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerReElectionInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ContinualAppointmentTimes.Equals(other.ContinualAppointmentTimes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ContinualAppointmentTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      continualAppointmentTimes_.WriteTo(output, _map_continualAppointmentTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += continualAppointmentTimes_.CalculateSize(_map_continualAppointmentTimes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerReElectionInformation other) {
      if (other == null) {
        return;
      }
      continualAppointmentTimes_.Add(other.continualAppointmentTimes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            continualAppointmentTimes_.AddEntriesFrom(input, _map_continualAppointmentTimes_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DividendPoolWeightSetting : pb::IMessage<DividendPoolWeightSetting> {
    private static readonly pb::MessageParser<DividendPoolWeightSetting> _parser = new pb::MessageParser<DividendPoolWeightSetting>(() => new DividendPoolWeightSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DividendPoolWeightSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DividendPoolWeightSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DividendPoolWeightSetting(DividendPoolWeightSetting other) : this() {
      citizenWelfareWeight_ = other.citizenWelfareWeight_;
      backupSubsidyWeight_ = other.backupSubsidyWeight_;
      minerRewardWeight_ = other.minerRewardWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DividendPoolWeightSetting Clone() {
      return new DividendPoolWeightSetting(this);
    }

    /// <summary>Field number for the "citizen_welfare_weight" field.</summary>
    public const int CitizenWelfareWeightFieldNumber = 1;
    private int citizenWelfareWeight_;
    /// <summary>
    /// The dividend weight of citizen welfare.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CitizenWelfareWeight {
      get { return citizenWelfareWeight_; }
      set {
        citizenWelfareWeight_ = value;
      }
    }

    /// <summary>Field number for the "backup_subsidy_weight" field.</summary>
    public const int BackupSubsidyWeightFieldNumber = 2;
    private int backupSubsidyWeight_;
    /// <summary>
    /// The dividend weight of candidate nodes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BackupSubsidyWeight {
      get { return backupSubsidyWeight_; }
      set {
        backupSubsidyWeight_ = value;
      }
    }

    /// <summary>Field number for the "miner_reward_weight" field.</summary>
    public const int MinerRewardWeightFieldNumber = 3;
    private int minerRewardWeight_;
    /// <summary>
    /// The dividend weight of miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinerRewardWeight {
      get { return minerRewardWeight_; }
      set {
        minerRewardWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DividendPoolWeightSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DividendPoolWeightSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CitizenWelfareWeight != other.CitizenWelfareWeight) return false;
      if (BackupSubsidyWeight != other.BackupSubsidyWeight) return false;
      if (MinerRewardWeight != other.MinerRewardWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CitizenWelfareWeight != 0) hash ^= CitizenWelfareWeight.GetHashCode();
      if (BackupSubsidyWeight != 0) hash ^= BackupSubsidyWeight.GetHashCode();
      if (MinerRewardWeight != 0) hash ^= MinerRewardWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CitizenWelfareWeight != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CitizenWelfareWeight);
      }
      if (BackupSubsidyWeight != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BackupSubsidyWeight);
      }
      if (MinerRewardWeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinerRewardWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CitizenWelfareWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CitizenWelfareWeight);
      }
      if (BackupSubsidyWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackupSubsidyWeight);
      }
      if (MinerRewardWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinerRewardWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DividendPoolWeightSetting other) {
      if (other == null) {
        return;
      }
      if (other.CitizenWelfareWeight != 0) {
        CitizenWelfareWeight = other.CitizenWelfareWeight;
      }
      if (other.BackupSubsidyWeight != 0) {
        BackupSubsidyWeight = other.BackupSubsidyWeight;
      }
      if (other.MinerRewardWeight != 0) {
        MinerRewardWeight = other.MinerRewardWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CitizenWelfareWeight = input.ReadInt32();
            break;
          }
          case 16: {
            BackupSubsidyWeight = input.ReadInt32();
            break;
          }
          case 24: {
            MinerRewardWeight = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MinerRewardWeightSetting : pb::IMessage<MinerRewardWeightSetting> {
    private static readonly pb::MessageParser<MinerRewardWeightSetting> _parser = new pb::MessageParser<MinerRewardWeightSetting>(() => new MinerRewardWeightSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerRewardWeightSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerRewardWeightSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerRewardWeightSetting(MinerRewardWeightSetting other) : this() {
      basicMinerRewardWeight_ = other.basicMinerRewardWeight_;
      votesWeightRewardWeight_ = other.votesWeightRewardWeight_;
      reElectionRewardWeight_ = other.reElectionRewardWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerRewardWeightSetting Clone() {
      return new MinerRewardWeightSetting(this);
    }

    /// <summary>Field number for the "basic_miner_reward_weight" field.</summary>
    public const int BasicMinerRewardWeightFieldNumber = 1;
    private int basicMinerRewardWeight_;
    /// <summary>
    /// The dividend weight of the basic income of the miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicMinerRewardWeight {
      get { return basicMinerRewardWeight_; }
      set {
        basicMinerRewardWeight_ = value;
      }
    }

    /// <summary>Field number for the "votes_weight_reward_weight" field.</summary>
    public const int VotesWeightRewardWeightFieldNumber = 2;
    private int votesWeightRewardWeight_;
    /// <summary>
    /// The dividend weight of the vote of the miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VotesWeightRewardWeight {
      get { return votesWeightRewardWeight_; }
      set {
        votesWeightRewardWeight_ = value;
      }
    }

    /// <summary>Field number for the "re_election_reward_weight" field.</summary>
    public const int ReElectionRewardWeightFieldNumber = 3;
    private int reElectionRewardWeight_;
    /// <summary>
    /// The dividend weight of the reappointment of the miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReElectionRewardWeight {
      get { return reElectionRewardWeight_; }
      set {
        reElectionRewardWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerRewardWeightSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerRewardWeightSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasicMinerRewardWeight != other.BasicMinerRewardWeight) return false;
      if (VotesWeightRewardWeight != other.VotesWeightRewardWeight) return false;
      if (ReElectionRewardWeight != other.ReElectionRewardWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasicMinerRewardWeight != 0) hash ^= BasicMinerRewardWeight.GetHashCode();
      if (VotesWeightRewardWeight != 0) hash ^= VotesWeightRewardWeight.GetHashCode();
      if (ReElectionRewardWeight != 0) hash ^= ReElectionRewardWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BasicMinerRewardWeight != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BasicMinerRewardWeight);
      }
      if (VotesWeightRewardWeight != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VotesWeightRewardWeight);
      }
      if (ReElectionRewardWeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReElectionRewardWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasicMinerRewardWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicMinerRewardWeight);
      }
      if (VotesWeightRewardWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VotesWeightRewardWeight);
      }
      if (ReElectionRewardWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReElectionRewardWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerRewardWeightSetting other) {
      if (other == null) {
        return;
      }
      if (other.BasicMinerRewardWeight != 0) {
        BasicMinerRewardWeight = other.BasicMinerRewardWeight;
      }
      if (other.VotesWeightRewardWeight != 0) {
        VotesWeightRewardWeight = other.VotesWeightRewardWeight;
      }
      if (other.ReElectionRewardWeight != 0) {
        ReElectionRewardWeight = other.ReElectionRewardWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BasicMinerRewardWeight = input.ReadInt32();
            break;
          }
          case 16: {
            VotesWeightRewardWeight = input.ReadInt32();
            break;
          }
          case 24: {
            ReElectionRewardWeight = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SchemeProportionInfo : pb::IMessage<SchemeProportionInfo> {
    private static readonly pb::MessageParser<SchemeProportionInfo> _parser = new pb::MessageParser<SchemeProportionInfo>(() => new SchemeProportionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SchemeProportionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemeProportionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemeProportionInfo(SchemeProportionInfo other) : this() {
      schemeId_ = other.schemeId_ != null ? other.schemeId_.Clone() : null;
      proportion_ = other.proportion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemeProportionInfo Clone() {
      return new SchemeProportionInfo(this);
    }

    /// <summary>Field number for the "scheme_id" field.</summary>
    public const int SchemeIdFieldNumber = 1;
    private global::AElf.Types.Hash schemeId_;
    /// <summary>
    /// The scheme id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash SchemeId {
      get { return schemeId_; }
      set {
        schemeId_ = value;
      }
    }

    /// <summary>Field number for the "proportion" field.</summary>
    public const int ProportionFieldNumber = 2;
    private int proportion_;
    /// <summary>
    /// Dividend weight percentage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Proportion {
      get { return proportion_; }
      set {
        proportion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SchemeProportionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SchemeProportionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SchemeId, other.SchemeId)) return false;
      if (Proportion != other.Proportion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (schemeId_ != null) hash ^= SchemeId.GetHashCode();
      if (Proportion != 0) hash ^= Proportion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (schemeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SchemeId);
      }
      if (Proportion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Proportion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (schemeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SchemeId);
      }
      if (Proportion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Proportion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SchemeProportionInfo other) {
      if (other == null) {
        return;
      }
      if (other.schemeId_ != null) {
        if (schemeId_ == null) {
          SchemeId = new global::AElf.Types.Hash();
        }
        SchemeId.MergeFrom(other.SchemeId);
      }
      if (other.Proportion != 0) {
        Proportion = other.Proportion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (schemeId_ == null) {
              SchemeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SchemeId);
            break;
          }
          case 16: {
            Proportion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DividendPoolWeightProportion : pb::IMessage<DividendPoolWeightProportion> {
    private static readonly pb::MessageParser<DividendPoolWeightProportion> _parser = new pb::MessageParser<DividendPoolWeightProportion>(() => new DividendPoolWeightProportion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DividendPoolWeightProportion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DividendPoolWeightProportion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DividendPoolWeightProportion(DividendPoolWeightProportion other) : this() {
      citizenWelfareProportionInfo_ = other.citizenWelfareProportionInfo_ != null ? other.citizenWelfareProportionInfo_.Clone() : null;
      backupSubsidyProportionInfo_ = other.backupSubsidyProportionInfo_ != null ? other.backupSubsidyProportionInfo_.Clone() : null;
      minerRewardProportionInfo_ = other.minerRewardProportionInfo_ != null ? other.minerRewardProportionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DividendPoolWeightProportion Clone() {
      return new DividendPoolWeightProportion(this);
    }

    /// <summary>Field number for the "citizen_welfare_proportion_info" field.</summary>
    public const int CitizenWelfareProportionInfoFieldNumber = 1;
    private global::AElf.Contracts.Treasury.SchemeProportionInfo citizenWelfareProportionInfo_;
    /// <summary>
    /// The proportion of citizen welfare.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Treasury.SchemeProportionInfo CitizenWelfareProportionInfo {
      get { return citizenWelfareProportionInfo_; }
      set {
        citizenWelfareProportionInfo_ = value;
      }
    }

    /// <summary>Field number for the "backup_subsidy_proportion_info" field.</summary>
    public const int BackupSubsidyProportionInfoFieldNumber = 2;
    private global::AElf.Contracts.Treasury.SchemeProportionInfo backupSubsidyProportionInfo_;
    /// <summary>
    /// The proportion of candidate nodes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Treasury.SchemeProportionInfo BackupSubsidyProportionInfo {
      get { return backupSubsidyProportionInfo_; }
      set {
        backupSubsidyProportionInfo_ = value;
      }
    }

    /// <summary>Field number for the "miner_reward_proportion_info" field.</summary>
    public const int MinerRewardProportionInfoFieldNumber = 3;
    private global::AElf.Contracts.Treasury.SchemeProportionInfo minerRewardProportionInfo_;
    /// <summary>
    /// The proportion of miner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Treasury.SchemeProportionInfo MinerRewardProportionInfo {
      get { return minerRewardProportionInfo_; }
      set {
        minerRewardProportionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DividendPoolWeightProportion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DividendPoolWeightProportion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CitizenWelfareProportionInfo, other.CitizenWelfareProportionInfo)) return false;
      if (!object.Equals(BackupSubsidyProportionInfo, other.BackupSubsidyProportionInfo)) return false;
      if (!object.Equals(MinerRewardProportionInfo, other.MinerRewardProportionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (citizenWelfareProportionInfo_ != null) hash ^= CitizenWelfareProportionInfo.GetHashCode();
      if (backupSubsidyProportionInfo_ != null) hash ^= BackupSubsidyProportionInfo.GetHashCode();
      if (minerRewardProportionInfo_ != null) hash ^= MinerRewardProportionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (citizenWelfareProportionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CitizenWelfareProportionInfo);
      }
      if (backupSubsidyProportionInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BackupSubsidyProportionInfo);
      }
      if (minerRewardProportionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MinerRewardProportionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (citizenWelfareProportionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CitizenWelfareProportionInfo);
      }
      if (backupSubsidyProportionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackupSubsidyProportionInfo);
      }
      if (minerRewardProportionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinerRewardProportionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DividendPoolWeightProportion other) {
      if (other == null) {
        return;
      }
      if (other.citizenWelfareProportionInfo_ != null) {
        if (citizenWelfareProportionInfo_ == null) {
          CitizenWelfareProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
        }
        CitizenWelfareProportionInfo.MergeFrom(other.CitizenWelfareProportionInfo);
      }
      if (other.backupSubsidyProportionInfo_ != null) {
        if (backupSubsidyProportionInfo_ == null) {
          BackupSubsidyProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
        }
        BackupSubsidyProportionInfo.MergeFrom(other.BackupSubsidyProportionInfo);
      }
      if (other.minerRewardProportionInfo_ != null) {
        if (minerRewardProportionInfo_ == null) {
          MinerRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
        }
        MinerRewardProportionInfo.MergeFrom(other.MinerRewardProportionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (citizenWelfareProportionInfo_ == null) {
              CitizenWelfareProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
            }
            input.ReadMessage(CitizenWelfareProportionInfo);
            break;
          }
          case 18: {
            if (backupSubsidyProportionInfo_ == null) {
              BackupSubsidyProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
            }
            input.ReadMessage(BackupSubsidyProportionInfo);
            break;
          }
          case 26: {
            if (minerRewardProportionInfo_ == null) {
              MinerRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
            }
            input.ReadMessage(MinerRewardProportionInfo);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MinerRewardWeightProportion : pb::IMessage<MinerRewardWeightProportion> {
    private static readonly pb::MessageParser<MinerRewardWeightProportion> _parser = new pb::MessageParser<MinerRewardWeightProportion>(() => new MinerRewardWeightProportion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MinerRewardWeightProportion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerRewardWeightProportion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerRewardWeightProportion(MinerRewardWeightProportion other) : this() {
      basicMinerRewardProportionInfo_ = other.basicMinerRewardProportionInfo_ != null ? other.basicMinerRewardProportionInfo_.Clone() : null;
      votesWeightRewardProportionInfo_ = other.votesWeightRewardProportionInfo_ != null ? other.votesWeightRewardProportionInfo_.Clone() : null;
      reElectionRewardProportionInfo_ = other.reElectionRewardProportionInfo_ != null ? other.reElectionRewardProportionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MinerRewardWeightProportion Clone() {
      return new MinerRewardWeightProportion(this);
    }

    /// <summary>Field number for the "basic_miner_reward_proportion_info" field.</summary>
    public const int BasicMinerRewardProportionInfoFieldNumber = 1;
    private global::AElf.Contracts.Treasury.SchemeProportionInfo basicMinerRewardProportionInfo_;
    /// <summary>
    /// The proportion of the basic income of the miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Treasury.SchemeProportionInfo BasicMinerRewardProportionInfo {
      get { return basicMinerRewardProportionInfo_; }
      set {
        basicMinerRewardProportionInfo_ = value;
      }
    }

    /// <summary>Field number for the "votes_weight_reward_proportion_info" field.</summary>
    public const int VotesWeightRewardProportionInfoFieldNumber = 2;
    private global::AElf.Contracts.Treasury.SchemeProportionInfo votesWeightRewardProportionInfo_;
    /// <summary>
    /// The proportion of the vote of the miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Treasury.SchemeProportionInfo VotesWeightRewardProportionInfo {
      get { return votesWeightRewardProportionInfo_; }
      set {
        votesWeightRewardProportionInfo_ = value;
      }
    }

    /// <summary>Field number for the "re_election_reward_proportion_info" field.</summary>
    public const int ReElectionRewardProportionInfoFieldNumber = 3;
    private global::AElf.Contracts.Treasury.SchemeProportionInfo reElectionRewardProportionInfo_;
    /// <summary>
    /// The proportion of the reappointment of the miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Treasury.SchemeProportionInfo ReElectionRewardProportionInfo {
      get { return reElectionRewardProportionInfo_; }
      set {
        reElectionRewardProportionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MinerRewardWeightProportion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MinerRewardWeightProportion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicMinerRewardProportionInfo, other.BasicMinerRewardProportionInfo)) return false;
      if (!object.Equals(VotesWeightRewardProportionInfo, other.VotesWeightRewardProportionInfo)) return false;
      if (!object.Equals(ReElectionRewardProportionInfo, other.ReElectionRewardProportionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicMinerRewardProportionInfo_ != null) hash ^= BasicMinerRewardProportionInfo.GetHashCode();
      if (votesWeightRewardProportionInfo_ != null) hash ^= VotesWeightRewardProportionInfo.GetHashCode();
      if (reElectionRewardProportionInfo_ != null) hash ^= ReElectionRewardProportionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (basicMinerRewardProportionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicMinerRewardProportionInfo);
      }
      if (votesWeightRewardProportionInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VotesWeightRewardProportionInfo);
      }
      if (reElectionRewardProportionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReElectionRewardProportionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicMinerRewardProportionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicMinerRewardProportionInfo);
      }
      if (votesWeightRewardProportionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotesWeightRewardProportionInfo);
      }
      if (reElectionRewardProportionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReElectionRewardProportionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MinerRewardWeightProportion other) {
      if (other == null) {
        return;
      }
      if (other.basicMinerRewardProportionInfo_ != null) {
        if (basicMinerRewardProportionInfo_ == null) {
          BasicMinerRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
        }
        BasicMinerRewardProportionInfo.MergeFrom(other.BasicMinerRewardProportionInfo);
      }
      if (other.votesWeightRewardProportionInfo_ != null) {
        if (votesWeightRewardProportionInfo_ == null) {
          VotesWeightRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
        }
        VotesWeightRewardProportionInfo.MergeFrom(other.VotesWeightRewardProportionInfo);
      }
      if (other.reElectionRewardProportionInfo_ != null) {
        if (reElectionRewardProportionInfo_ == null) {
          ReElectionRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
        }
        ReElectionRewardProportionInfo.MergeFrom(other.ReElectionRewardProportionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicMinerRewardProportionInfo_ == null) {
              BasicMinerRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
            }
            input.ReadMessage(BasicMinerRewardProportionInfo);
            break;
          }
          case 18: {
            if (votesWeightRewardProportionInfo_ == null) {
              VotesWeightRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
            }
            input.ReadMessage(VotesWeightRewardProportionInfo);
            break;
          }
          case 26: {
            if (reElectionRewardProportionInfo_ == null) {
              ReElectionRewardProportionInfo = new global::AElf.Contracts.Treasury.SchemeProportionInfo();
            }
            input.ReadMessage(ReElectionRewardProportionInfo);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RecordMinerReplacementInput : pb::IMessage<RecordMinerReplacementInput> {
    private static readonly pb::MessageParser<RecordMinerReplacementInput> _parser = new pb::MessageParser<RecordMinerReplacementInput>(() => new RecordMinerReplacementInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordMinerReplacementInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Treasury.TreasuryContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordMinerReplacementInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordMinerReplacementInput(RecordMinerReplacementInput other) : this() {
      oldPubkey_ = other.oldPubkey_;
      newPubkey_ = other.newPubkey_;
      currentTermNumber_ = other.currentTermNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordMinerReplacementInput Clone() {
      return new RecordMinerReplacementInput(this);
    }

    /// <summary>Field number for the "old_pubkey" field.</summary>
    public const int OldPubkeyFieldNumber = 1;
    private string oldPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OldPubkey {
      get { return oldPubkey_; }
      set {
        oldPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_pubkey" field.</summary>
    public const int NewPubkeyFieldNumber = 2;
    private string newPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPubkey {
      get { return newPubkey_; }
      set {
        newPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_term_number" field.</summary>
    public const int CurrentTermNumberFieldNumber = 3;
    private long currentTermNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentTermNumber {
      get { return currentTermNumber_; }
      set {
        currentTermNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordMinerReplacementInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordMinerReplacementInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldPubkey != other.OldPubkey) return false;
      if (NewPubkey != other.NewPubkey) return false;
      if (CurrentTermNumber != other.CurrentTermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldPubkey.Length != 0) hash ^= OldPubkey.GetHashCode();
      if (NewPubkey.Length != 0) hash ^= NewPubkey.GetHashCode();
      if (CurrentTermNumber != 0L) hash ^= CurrentTermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OldPubkey);
      }
      if (NewPubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewPubkey);
      }
      if (CurrentTermNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrentTermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPubkey);
      }
      if (NewPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPubkey);
      }
      if (CurrentTermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentTermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordMinerReplacementInput other) {
      if (other == null) {
        return;
      }
      if (other.OldPubkey.Length != 0) {
        OldPubkey = other.OldPubkey;
      }
      if (other.NewPubkey.Length != 0) {
        NewPubkey = other.NewPubkey;
      }
      if (other.CurrentTermNumber != 0L) {
        CurrentTermNumber = other.CurrentTermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OldPubkey = input.ReadString();
            break;
          }
          case 18: {
            NewPubkey = input.ReadString();
            break;
          }
          case 24: {
            CurrentTermNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
