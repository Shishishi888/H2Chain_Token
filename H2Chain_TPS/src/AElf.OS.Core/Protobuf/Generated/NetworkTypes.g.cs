// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: network_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.OS.Network {

  /// <summary>Holder for reflection information generated from network_types.proto</summary>
  public static partial class NetworkTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for network_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNuZXR3b3JrX3R5cGVzLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGg9hZWxmL2NvcmUucHJvdG8aDGtlcm5lbC5wcm90byJJChFC",
            "bG9ja0Fubm91bmNlbWVudBIeCgpibG9ja19oYXNoGAEgASgLMgouYWVsZi5I",
            "YXNoEhQKDGJsb2NrX2hlaWdodBgCIAEoAyJjChVCbG9ja1dpdGhUcmFuc2Fj",
            "dGlvbnMSIQoGaGVhZGVyGAEgASgLMhEuYWVsZi5CbG9ja0hlYWRlchInCgx0",
            "cmFuc2FjdGlvbnMYAiADKAsyES5hZWxmLlRyYW5zYWN0aW9uIkMKD0xpYkFu",
            "bm91bmNlbWVudBIcCghsaWJfaGFzaBgBIAEoCzIKLmFlbGYuSGFzaBISCgps",
            "aWJfaGVpZ2h0GAIgASgDIkcKDUJsb2Nrc1JlcXVlc3QSJwoTcHJldmlvdXNf",
            "YmxvY2tfaGFzaBgBIAEoCzIKLmFlbGYuSGFzaBINCgVjb3VudBgCIAEoBSIz",
            "CglCbG9ja0xpc3QSJgoGYmxvY2tzGAEgAygLMhYuQmxvY2tXaXRoVHJhbnNh",
            "Y3Rpb25zIigKDEJsb2NrUmVxdWVzdBIYCgRoYXNoGAEgASgLMgouYWVsZi5I",
            "YXNoIkIKCkJsb2NrUmVwbHkSDQoFZXJyb3IYASABKAkSJQoFYmxvY2sYAiAB",
            "KAsyFi5CbG9ja1dpdGhUcmFuc2FjdGlvbnMiWgoJSGFuZHNoYWtlEiYKDmhh",
            "bmRzaGFrZV9kYXRhGAEgASgLMg4uSGFuZHNoYWtlRGF0YRIRCglzaWduYXR1",
            "cmUYAiABKAwSEgoKc2Vzc2lvbl9pZBgDIAEoDCKeAgoNSGFuZHNoYWtlRGF0",
            "YRIQCghjaGFpbl9pZBgBIAEoBRIPCgd2ZXJzaW9uGAIgASgFEhYKDmxpc3Rl",
            "bmluZ19wb3J0GAMgASgFEg4KBnB1YmtleRgEIAEoDBIjCg9iZXN0X2NoYWlu",
            "X2hhc2gYBSABKAsyCi5hZWxmLkhhc2gSGQoRYmVzdF9jaGFpbl9oZWlnaHQY",
            "BiABKAMSMAocbGFzdF9pcnJldmVyc2libGVfYmxvY2tfaGFzaBgHIAEoCzIK",
            "LmFlbGYuSGFzaBImCh5sYXN0X2lycmV2ZXJzaWJsZV9ibG9ja19oZWlnaHQY",
            "CCABKAMSKAoEdGltZRgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAiMQoQSGFuZHNoYWtlUmVxdWVzdBIdCgloYW5kc2hha2UYASABKAsyCi5I",
            "YW5kc2hha2UiTwoOSGFuZHNoYWtlUmVwbHkSHQoJaGFuZHNoYWtlGAEgASgL",
            "MgouSGFuZHNoYWtlEh4KBWVycm9yGAIgASgOMg8uSGFuZHNoYWtlRXJyb3Ii",
            "GQoXQ29uZmlybUhhbmRzaGFrZVJlcXVlc3QiUQoQRGlzY29ubmVjdFJlYXNv",
            "bhIlCgN3aHkYASABKA4yGC5EaXNjb25uZWN0UmVhc29uLlJlYXNvbiIWCgZS",
            "ZWFzb24SDAoIU0hVVERPV04QACIsCghOb2RlSW5mbxIQCghlbmRwb2ludBgB",
            "IAEoCRIOCgZwdWJrZXkYAiABKAwiJAoITm9kZUxpc3QSGAoFbm9kZXMYASAD",
            "KAsyCS5Ob2RlSW5mbyIhCgxOb2Rlc1JlcXVlc3QSEQoJbWF4X2NvdW50GAEg",
            "ASgFKsIBCg5IYW5kc2hha2VFcnJvchIQCgxIQU5EU0hBS0VfT0sQABISCg5D",
            "SEFJTl9NSVNNQVRDSBABEhUKEVBST1RPQ09MX01JU01BVENIEAISEwoPV1JP",
            "TkdfU0lHTkFUVVJFEAMSFwoTUkVQRUFURURfQ09OTkVDVElPThAEEhYKEkNP",
            "Tk5FQ1RJT05fUkVGVVNFRBAFEhYKEklOVkFMSURfQ09OTkVDVElPThAGEhUK",
            "EVNJR05BVFVSRV9USU1FT1VUEAdCEqoCD0FFbGYuT1MuTmV0d29ya2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::AElf.Types.CoreReflection.Descriptor, global::AElf.Kernel.KernelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.OS.Network.HandshakeError), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.BlockAnnouncement), global::AElf.OS.Network.BlockAnnouncement.Parser, new[]{ "BlockHash", "BlockHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.BlockWithTransactions), global::AElf.OS.Network.BlockWithTransactions.Parser, new[]{ "Header", "Transactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.LibAnnouncement), global::AElf.OS.Network.LibAnnouncement.Parser, new[]{ "LibHash", "LibHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.BlocksRequest), global::AElf.OS.Network.BlocksRequest.Parser, new[]{ "PreviousBlockHash", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.BlockList), global::AElf.OS.Network.BlockList.Parser, new[]{ "Blocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.BlockRequest), global::AElf.OS.Network.BlockRequest.Parser, new[]{ "Hash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.BlockReply), global::AElf.OS.Network.BlockReply.Parser, new[]{ "Error", "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.Handshake), global::AElf.OS.Network.Handshake.Parser, new[]{ "HandshakeData", "Signature", "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.HandshakeData), global::AElf.OS.Network.HandshakeData.Parser, new[]{ "ChainId", "Version", "ListeningPort", "Pubkey", "BestChainHash", "BestChainHeight", "LastIrreversibleBlockHash", "LastIrreversibleBlockHeight", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.HandshakeRequest), global::AElf.OS.Network.HandshakeRequest.Parser, new[]{ "Handshake" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.HandshakeReply), global::AElf.OS.Network.HandshakeReply.Parser, new[]{ "Handshake", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.ConfirmHandshakeRequest), global::AElf.OS.Network.ConfirmHandshakeRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.DisconnectReason), global::AElf.OS.Network.DisconnectReason.Parser, new[]{ "Why" }, null, new[]{ typeof(global::AElf.OS.Network.DisconnectReason.Types.Reason) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.NodeInfo), global::AElf.OS.Network.NodeInfo.Parser, new[]{ "Endpoint", "Pubkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.NodeList), global::AElf.OS.Network.NodeList.Parser, new[]{ "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.OS.Network.NodesRequest), global::AElf.OS.Network.NodesRequest.Parser, new[]{ "MaxCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum HandshakeError {
    [pbr::OriginalName("HANDSHAKE_OK")] HandshakeOk = 0,
    [pbr::OriginalName("CHAIN_MISMATCH")] ChainMismatch = 1,
    [pbr::OriginalName("PROTOCOL_MISMATCH")] ProtocolMismatch = 2,
    [pbr::OriginalName("WRONG_SIGNATURE")] WrongSignature = 3,
    [pbr::OriginalName("REPEATED_CONNECTION")] RepeatedConnection = 4,
    [pbr::OriginalName("CONNECTION_REFUSED")] ConnectionRefused = 5,
    [pbr::OriginalName("INVALID_CONNECTION")] InvalidConnection = 6,
    [pbr::OriginalName("SIGNATURE_TIMEOUT")] SignatureTimeout = 7,
  }

  #endregion

  #region Messages
  public sealed partial class BlockAnnouncement : pb::IMessage<BlockAnnouncement> {
    private static readonly pb::MessageParser<BlockAnnouncement> _parser = new pb::MessageParser<BlockAnnouncement>(() => new BlockAnnouncement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockAnnouncement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockAnnouncement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockAnnouncement(BlockAnnouncement other) : this() {
      blockHash_ = other.blockHash_ != null ? other.blockHash_.Clone() : null;
      blockHeight_ = other.blockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockAnnouncement Clone() {
      return new BlockAnnouncement(this);
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 1;
    private global::AElf.Types.Hash blockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 2;
    private long blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockAnnouncement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockAnnouncement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockHash, other.BlockHash)) return false;
      if (BlockHeight != other.BlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockHash_ != null) hash ^= BlockHash.GetHashCode();
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockHash);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHash);
      }
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockAnnouncement other) {
      if (other == null) {
        return;
      }
      if (other.blockHash_ != null) {
        if (blockHash_ == null) {
          BlockHash = new global::AElf.Types.Hash();
        }
        BlockHash.MergeFrom(other.BlockHash);
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockHash_ == null) {
              BlockHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(BlockHash);
            break;
          }
          case 16: {
            BlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockWithTransactions : pb::IMessage<BlockWithTransactions> {
    private static readonly pb::MessageParser<BlockWithTransactions> _parser = new pb::MessageParser<BlockWithTransactions>(() => new BlockWithTransactions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockWithTransactions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTransactions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTransactions(BlockWithTransactions other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTransactions Clone() {
      return new BlockWithTransactions(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::AElf.Kernel.BlockHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.BlockHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Transaction.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Transaction> transactions_ = new pbc::RepeatedField<global::AElf.Types.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Transaction> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockWithTransactions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockWithTransactions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockWithTransactions other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::AElf.Kernel.BlockHeader();
        }
        Header.MergeFrom(other.Header);
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::AElf.Kernel.BlockHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LibAnnouncement : pb::IMessage<LibAnnouncement> {
    private static readonly pb::MessageParser<LibAnnouncement> _parser = new pb::MessageParser<LibAnnouncement>(() => new LibAnnouncement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibAnnouncement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibAnnouncement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibAnnouncement(LibAnnouncement other) : this() {
      libHash_ = other.libHash_ != null ? other.libHash_.Clone() : null;
      libHeight_ = other.libHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibAnnouncement Clone() {
      return new LibAnnouncement(this);
    }

    /// <summary>Field number for the "lib_hash" field.</summary>
    public const int LibHashFieldNumber = 1;
    private global::AElf.Types.Hash libHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash LibHash {
      get { return libHash_; }
      set {
        libHash_ = value;
      }
    }

    /// <summary>Field number for the "lib_height" field.</summary>
    public const int LibHeightFieldNumber = 2;
    private long libHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LibHeight {
      get { return libHeight_; }
      set {
        libHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibAnnouncement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibAnnouncement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LibHash, other.LibHash)) return false;
      if (LibHeight != other.LibHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (libHash_ != null) hash ^= LibHash.GetHashCode();
      if (LibHeight != 0L) hash ^= LibHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (libHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LibHash);
      }
      if (LibHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LibHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (libHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LibHash);
      }
      if (LibHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LibHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibAnnouncement other) {
      if (other == null) {
        return;
      }
      if (other.libHash_ != null) {
        if (libHash_ == null) {
          LibHash = new global::AElf.Types.Hash();
        }
        LibHash.MergeFrom(other.LibHash);
      }
      if (other.LibHeight != 0L) {
        LibHeight = other.LibHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (libHash_ == null) {
              LibHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(LibHash);
            break;
          }
          case 16: {
            LibHeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlocksRequest : pb::IMessage<BlocksRequest> {
    private static readonly pb::MessageParser<BlocksRequest> _parser = new pb::MessageParser<BlocksRequest>(() => new BlocksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlocksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlocksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlocksRequest(BlocksRequest other) : this() {
      previousBlockHash_ = other.previousBlockHash_ != null ? other.previousBlockHash_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlocksRequest Clone() {
      return new BlocksRequest(this);
    }

    /// <summary>Field number for the "previous_block_hash" field.</summary>
    public const int PreviousBlockHashFieldNumber = 1;
    private global::AElf.Types.Hash previousBlockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash PreviousBlockHash {
      get { return previousBlockHash_; }
      set {
        previousBlockHash_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlocksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlocksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PreviousBlockHash, other.PreviousBlockHash)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (previousBlockHash_ != null) hash ^= PreviousBlockHash.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (previousBlockHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PreviousBlockHash);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (previousBlockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousBlockHash);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlocksRequest other) {
      if (other == null) {
        return;
      }
      if (other.previousBlockHash_ != null) {
        if (previousBlockHash_ == null) {
          PreviousBlockHash = new global::AElf.Types.Hash();
        }
        PreviousBlockHash.MergeFrom(other.PreviousBlockHash);
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (previousBlockHash_ == null) {
              PreviousBlockHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousBlockHash);
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockList : pb::IMessage<BlockList> {
    private static readonly pb::MessageParser<BlockList> _parser = new pb::MessageParser<BlockList>(() => new BlockList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList(BlockList other) : this() {
      blocks_ = other.blocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList Clone() {
      return new BlockList(this);
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.OS.Network.BlockWithTransactions> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.OS.Network.BlockWithTransactions.Parser);
    private readonly pbc::RepeatedField<global::AElf.OS.Network.BlockWithTransactions> blocks_ = new pbc::RepeatedField<global::AElf.OS.Network.BlockWithTransactions>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.OS.Network.BlockWithTransactions> Blocks {
      get { return blocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blocks_.Equals(other.blocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blocks_.WriteTo(output, _repeated_blocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockList other) {
      if (other == null) {
        return;
      }
      blocks_.Add(other.blocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockRequest : pb::IMessage<BlockRequest> {
    private static readonly pb::MessageParser<BlockRequest> _parser = new pb::MessageParser<BlockRequest>(() => new BlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockRequest(BlockRequest other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockRequest Clone() {
      return new BlockRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::AElf.Types.Hash hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          Hash = new global::AElf.Types.Hash();
        }
        Hash.MergeFrom(other.Hash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              Hash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Hash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockReply : pb::IMessage<BlockReply> {
    private static readonly pb::MessageParser<BlockReply> _parser = new pb::MessageParser<BlockReply>(() => new BlockReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReply(BlockReply other) : this() {
      error_ = other.error_;
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReply Clone() {
      return new BlockReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    private global::AElf.OS.Network.BlockWithTransactions block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.OS.Network.BlockWithTransactions Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (block_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockReply other) {
      if (other == null) {
        return;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::AElf.OS.Network.BlockWithTransactions();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            if (block_ == null) {
              Block = new global::AElf.OS.Network.BlockWithTransactions();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Handshake : pb::IMessage<Handshake> {
    private static readonly pb::MessageParser<Handshake> _parser = new pb::MessageParser<Handshake>(() => new Handshake());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Handshake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake(Handshake other) : this() {
      handshakeData_ = other.handshakeData_ != null ? other.handshakeData_.Clone() : null;
      signature_ = other.signature_;
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake Clone() {
      return new Handshake(this);
    }

    /// <summary>Field number for the "handshake_data" field.</summary>
    public const int HandshakeDataFieldNumber = 1;
    private global::AElf.OS.Network.HandshakeData handshakeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.OS.Network.HandshakeData HandshakeData {
      get { return handshakeData_; }
      set {
        handshakeData_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private pb::ByteString sessionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Handshake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Handshake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HandshakeData, other.HandshakeData)) return false;
      if (Signature != other.Signature) return false;
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (handshakeData_ != null) hash ^= HandshakeData.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (handshakeData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HandshakeData);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (handshakeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandshakeData);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Handshake other) {
      if (other == null) {
        return;
      }
      if (other.handshakeData_ != null) {
        if (handshakeData_ == null) {
          HandshakeData = new global::AElf.OS.Network.HandshakeData();
        }
        HandshakeData.MergeFrom(other.HandshakeData);
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (handshakeData_ == null) {
              HandshakeData = new global::AElf.OS.Network.HandshakeData();
            }
            input.ReadMessage(HandshakeData);
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
          case 26: {
            SessionId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HandshakeData : pb::IMessage<HandshakeData> {
    private static readonly pb::MessageParser<HandshakeData> _parser = new pb::MessageParser<HandshakeData>(() => new HandshakeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeData(HandshakeData other) : this() {
      chainId_ = other.chainId_;
      version_ = other.version_;
      listeningPort_ = other.listeningPort_;
      pubkey_ = other.pubkey_;
      bestChainHash_ = other.bestChainHash_ != null ? other.bestChainHash_.Clone() : null;
      bestChainHeight_ = other.bestChainHeight_;
      lastIrreversibleBlockHash_ = other.lastIrreversibleBlockHash_ != null ? other.lastIrreversibleBlockHash_.Clone() : null;
      lastIrreversibleBlockHeight_ = other.lastIrreversibleBlockHeight_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeData Clone() {
      return new HandshakeData(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "listening_port" field.</summary>
    public const int ListeningPortFieldNumber = 3;
    private int listeningPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ListeningPort {
      get { return listeningPort_; }
      set {
        listeningPort_ = value;
      }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 4;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "best_chain_hash" field.</summary>
    public const int BestChainHashFieldNumber = 5;
    private global::AElf.Types.Hash bestChainHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash BestChainHash {
      get { return bestChainHash_; }
      set {
        bestChainHash_ = value;
      }
    }

    /// <summary>Field number for the "best_chain_height" field.</summary>
    public const int BestChainHeightFieldNumber = 6;
    private long bestChainHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BestChainHeight {
      get { return bestChainHeight_; }
      set {
        bestChainHeight_ = value;
      }
    }

    /// <summary>Field number for the "last_irreversible_block_hash" field.</summary>
    public const int LastIrreversibleBlockHashFieldNumber = 7;
    private global::AElf.Types.Hash lastIrreversibleBlockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash LastIrreversibleBlockHash {
      get { return lastIrreversibleBlockHash_; }
      set {
        lastIrreversibleBlockHash_ = value;
      }
    }

    /// <summary>Field number for the "last_irreversible_block_height" field.</summary>
    public const int LastIrreversibleBlockHeightFieldNumber = 8;
    private long lastIrreversibleBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastIrreversibleBlockHeight {
      get { return lastIrreversibleBlockHeight_; }
      set {
        lastIrreversibleBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (Version != other.Version) return false;
      if (ListeningPort != other.ListeningPort) return false;
      if (Pubkey != other.Pubkey) return false;
      if (!object.Equals(BestChainHash, other.BestChainHash)) return false;
      if (BestChainHeight != other.BestChainHeight) return false;
      if (!object.Equals(LastIrreversibleBlockHash, other.LastIrreversibleBlockHash)) return false;
      if (LastIrreversibleBlockHeight != other.LastIrreversibleBlockHeight) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ListeningPort != 0) hash ^= ListeningPort.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (bestChainHash_ != null) hash ^= BestChainHash.GetHashCode();
      if (BestChainHeight != 0L) hash ^= BestChainHeight.GetHashCode();
      if (lastIrreversibleBlockHash_ != null) hash ^= LastIrreversibleBlockHash.GetHashCode();
      if (LastIrreversibleBlockHeight != 0L) hash ^= LastIrreversibleBlockHeight.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (ListeningPort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ListeningPort);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Pubkey);
      }
      if (bestChainHash_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BestChainHash);
      }
      if (BestChainHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BestChainHeight);
      }
      if (lastIrreversibleBlockHash_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastIrreversibleBlockHash);
      }
      if (LastIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(LastIrreversibleBlockHeight);
      }
      if (time_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (ListeningPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ListeningPort);
      }
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (bestChainHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BestChainHash);
      }
      if (BestChainHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BestChainHeight);
      }
      if (lastIrreversibleBlockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastIrreversibleBlockHash);
      }
      if (LastIrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastIrreversibleBlockHeight);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakeData other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ListeningPort != 0) {
        ListeningPort = other.ListeningPort;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.bestChainHash_ != null) {
        if (bestChainHash_ == null) {
          BestChainHash = new global::AElf.Types.Hash();
        }
        BestChainHash.MergeFrom(other.BestChainHash);
      }
      if (other.BestChainHeight != 0L) {
        BestChainHeight = other.BestChainHeight;
      }
      if (other.lastIrreversibleBlockHash_ != null) {
        if (lastIrreversibleBlockHash_ == null) {
          LastIrreversibleBlockHash = new global::AElf.Types.Hash();
        }
        LastIrreversibleBlockHash.MergeFrom(other.LastIrreversibleBlockHash);
      }
      if (other.LastIrreversibleBlockHeight != 0L) {
        LastIrreversibleBlockHeight = other.LastIrreversibleBlockHeight;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            ListeningPort = input.ReadInt32();
            break;
          }
          case 34: {
            Pubkey = input.ReadBytes();
            break;
          }
          case 42: {
            if (bestChainHash_ == null) {
              BestChainHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(BestChainHash);
            break;
          }
          case 48: {
            BestChainHeight = input.ReadInt64();
            break;
          }
          case 58: {
            if (lastIrreversibleBlockHash_ == null) {
              LastIrreversibleBlockHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(LastIrreversibleBlockHash);
            break;
          }
          case 64: {
            LastIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 74: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HandshakeRequest : pb::IMessage<HandshakeRequest> {
    private static readonly pb::MessageParser<HandshakeRequest> _parser = new pb::MessageParser<HandshakeRequest>(() => new HandshakeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeRequest(HandshakeRequest other) : this() {
      handshake_ = other.handshake_ != null ? other.handshake_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeRequest Clone() {
      return new HandshakeRequest(this);
    }

    /// <summary>Field number for the "handshake" field.</summary>
    public const int HandshakeFieldNumber = 1;
    private global::AElf.OS.Network.Handshake handshake_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.OS.Network.Handshake Handshake {
      get { return handshake_; }
      set {
        handshake_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Handshake, other.Handshake)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (handshake_ != null) hash ^= Handshake.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (handshake_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Handshake);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (handshake_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handshake);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakeRequest other) {
      if (other == null) {
        return;
      }
      if (other.handshake_ != null) {
        if (handshake_ == null) {
          Handshake = new global::AElf.OS.Network.Handshake();
        }
        Handshake.MergeFrom(other.Handshake);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (handshake_ == null) {
              Handshake = new global::AElf.OS.Network.Handshake();
            }
            input.ReadMessage(Handshake);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HandshakeReply : pb::IMessage<HandshakeReply> {
    private static readonly pb::MessageParser<HandshakeReply> _parser = new pb::MessageParser<HandshakeReply>(() => new HandshakeReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakeReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeReply(HandshakeReply other) : this() {
      handshake_ = other.handshake_ != null ? other.handshake_.Clone() : null;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeReply Clone() {
      return new HandshakeReply(this);
    }

    /// <summary>Field number for the "handshake" field.</summary>
    public const int HandshakeFieldNumber = 1;
    private global::AElf.OS.Network.Handshake handshake_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.OS.Network.Handshake Handshake {
      get { return handshake_; }
      set {
        handshake_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::AElf.OS.Network.HandshakeError error_ = global::AElf.OS.Network.HandshakeError.HandshakeOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.OS.Network.HandshakeError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakeReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakeReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Handshake, other.Handshake)) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (handshake_ != null) hash ^= Handshake.GetHashCode();
      if (Error != global::AElf.OS.Network.HandshakeError.HandshakeOk) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (handshake_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Handshake);
      }
      if (Error != global::AElf.OS.Network.HandshakeError.HandshakeOk) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (handshake_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handshake);
      }
      if (Error != global::AElf.OS.Network.HandshakeError.HandshakeOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakeReply other) {
      if (other == null) {
        return;
      }
      if (other.handshake_ != null) {
        if (handshake_ == null) {
          Handshake = new global::AElf.OS.Network.Handshake();
        }
        Handshake.MergeFrom(other.Handshake);
      }
      if (other.Error != global::AElf.OS.Network.HandshakeError.HandshakeOk) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (handshake_ == null) {
              Handshake = new global::AElf.OS.Network.Handshake();
            }
            input.ReadMessage(Handshake);
            break;
          }
          case 16: {
            Error = (global::AElf.OS.Network.HandshakeError) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfirmHandshakeRequest : pb::IMessage<ConfirmHandshakeRequest> {
    private static readonly pb::MessageParser<ConfirmHandshakeRequest> _parser = new pb::MessageParser<ConfirmHandshakeRequest>(() => new ConfirmHandshakeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmHandshakeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmHandshakeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmHandshakeRequest(ConfirmHandshakeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmHandshakeRequest Clone() {
      return new ConfirmHandshakeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmHandshakeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmHandshakeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmHandshakeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DisconnectReason : pb::IMessage<DisconnectReason> {
    private static readonly pb::MessageParser<DisconnectReason> _parser = new pb::MessageParser<DisconnectReason>(() => new DisconnectReason());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectReason> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectReason() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectReason(DisconnectReason other) : this() {
      why_ = other.why_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectReason Clone() {
      return new DisconnectReason(this);
    }

    /// <summary>Field number for the "why" field.</summary>
    public const int WhyFieldNumber = 1;
    private global::AElf.OS.Network.DisconnectReason.Types.Reason why_ = global::AElf.OS.Network.DisconnectReason.Types.Reason.Shutdown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.OS.Network.DisconnectReason.Types.Reason Why {
      get { return why_; }
      set {
        why_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectReason);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectReason other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Why != other.Why) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Why != global::AElf.OS.Network.DisconnectReason.Types.Reason.Shutdown) hash ^= Why.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Why != global::AElf.OS.Network.DisconnectReason.Types.Reason.Shutdown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Why);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Why != global::AElf.OS.Network.DisconnectReason.Types.Reason.Shutdown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Why);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectReason other) {
      if (other == null) {
        return;
      }
      if (other.Why != global::AElf.OS.Network.DisconnectReason.Types.Reason.Shutdown) {
        Why = other.Why;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Why = (global::AElf.OS.Network.DisconnectReason.Types.Reason) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DisconnectReason message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Reason {
        [pbr::OriginalName("SHUTDOWN")] Shutdown = 0,
      }

    }
    #endregion

  }

  public sealed partial class NodeInfo : pb::IMessage<NodeInfo> {
    private static readonly pb::MessageParser<NodeInfo> _parser = new pb::MessageParser<NodeInfo>(() => new NodeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInfo(NodeInfo other) : this() {
      endpoint_ = other.endpoint_;
      pubkey_ = other.pubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInfo Clone() {
      return new NodeInfo(this);
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 1;
    private string endpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 2;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Endpoint != other.Endpoint) return false;
      if (Pubkey != other.Pubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Endpoint.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Endpoint);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Pubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Endpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Endpoint = input.ReadString();
            break;
          }
          case 18: {
            Pubkey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeList : pb::IMessage<NodeList> {
    private static readonly pb::MessageParser<NodeList> _parser = new pb::MessageParser<NodeList>(() => new NodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList(NodeList other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList Clone() {
      return new NodeList(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.OS.Network.NodeInfo> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.OS.Network.NodeInfo.Parser);
    private readonly pbc::RepeatedField<global::AElf.OS.Network.NodeInfo> nodes_ = new pbc::RepeatedField<global::AElf.OS.Network.NodeInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.OS.Network.NodeInfo> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeList other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodesRequest : pb::IMessage<NodesRequest> {
    private static readonly pb::MessageParser<NodesRequest> _parser = new pb::MessageParser<NodesRequest>(() => new NodesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.OS.Network.NetworkTypesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodesRequest(NodesRequest other) : this() {
      maxCount_ = other.maxCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodesRequest Clone() {
      return new NodesRequest(this);
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 1;
    private int maxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxCount != other.MaxCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodesRequest other) {
      if (other == null) {
        return;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
